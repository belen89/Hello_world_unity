#include "il2cpp-config.h"
#include "class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include <cstring>
#include <string.h>
#include <stdio.h>
#ifndef _MSC_VER
#include <alloca.h>
#else
#include <malloc.h>
#endif
#include <cmath>
#include <limits>
#include <assert.h>
#include "stringLiterals.h"

extern TypeInfo U3CModuleU3E_t1423_il2cpp_TypeInfo;
// <Module>
#include "System_U3CModuleU3E.h"
extern TypeInfo Locale_t1424_il2cpp_TypeInfo;
// Locale
#include "System_Locale.h"
extern TypeInfo MonoTODOAttribute_t1425_il2cpp_TypeInfo;
// System.MonoTODOAttribute
#include "System_System_MonoTODOAttribute.h"
extern TypeInfo GeneratedCodeAttribute_t1215_il2cpp_TypeInfo;
// System.CodeDom.Compiler.GeneratedCodeAttribute
#include "System_System_CodeDom_Compiler_GeneratedCodeAttribute.h"
extern TypeInfo Enumerator_t1633_il2cpp_TypeInfo;
extern TypeInfo LinkedList_1_t1632_il2cpp_TypeInfo;
extern TypeInfo LinkedListNode_1_t1634_il2cpp_TypeInfo;
extern TypeInfo Enumerator_t1636_il2cpp_TypeInfo;
extern TypeInfo Stack_1_t1635_il2cpp_TypeInfo;
extern TypeInfo HybridDictionary_t1428_il2cpp_TypeInfo;
// System.Collections.Specialized.HybridDictionary
#include "System_System_Collections_Specialized_HybridDictionary.h"
extern TypeInfo DictionaryNode_t1429_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System_System_Collections_Specialized_ListDictionary_Diction.h"
extern TypeInfo DictionaryNodeEnumerator_t1430_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNodeEnumerator
#include "System_System_Collections_Specialized_ListDictionary_Diction_0.h"
extern TypeInfo ListDictionary_t1427_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary
#include "System_System_Collections_Specialized_ListDictionary.h"
extern TypeInfo _Item_t1432_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_Item
#include "System_System_Collections_Specialized_NameObjectCollectionBa.h"
extern TypeInfo _KeysEnumerator_t1434_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_KeysEnumerator
#include "System_System_Collections_Specialized_NameObjectCollectionBa_0.h"
extern TypeInfo KeysCollection_t1435_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/KeysCollection
#include "System_System_Collections_Specialized_NameObjectCollectionBa_1.h"
extern TypeInfo NameObjectCollectionBase_t1433_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase
#include "System_System_Collections_Specialized_NameObjectCollectionBa_2.h"
extern TypeInfo NameValueCollection_t1439_il2cpp_TypeInfo;
// System.Collections.Specialized.NameValueCollection
#include "System_System_Collections_Specialized_NameValueCollection.h"
extern TypeInfo DefaultValueAttribute_t1212_il2cpp_TypeInfo;
// System.ComponentModel.DefaultValueAttribute
#include "System_System_ComponentModel_DefaultValueAttribute.h"
extern TypeInfo EditorBrowsableAttribute_t1209_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableAttribute
#include "System_System_ComponentModel_EditorBrowsableAttribute.h"
extern TypeInfo EditorBrowsableState_t1440_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableState
#include "System_System_ComponentModel_EditorBrowsableState.h"
extern TypeInfo TypeConverter_t1441_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverter
#include "System_System_ComponentModel_TypeConverter.h"
extern TypeInfo TypeConverterAttribute_t1442_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverterAttribute
#include "System_System_ComponentModel_TypeConverterAttribute.h"
extern TypeInfo AuthenticationLevel_t1443_il2cpp_TypeInfo;
// System.Net.Security.AuthenticationLevel
#include "System_System_Net_Security_AuthenticationLevel.h"
extern TypeInfo SslPolicyErrors_t1444_il2cpp_TypeInfo;
// System.Net.Security.SslPolicyErrors
#include "System_System_Net_Security_SslPolicyErrors.h"
extern TypeInfo AddressFamily_t1445_il2cpp_TypeInfo;
// System.Net.Sockets.AddressFamily
#include "System_System_Net_Sockets_AddressFamily.h"
extern TypeInfo DefaultCertificatePolicy_t1446_il2cpp_TypeInfo;
// System.Net.DefaultCertificatePolicy
#include "System_System_Net_DefaultCertificatePolicy.h"
extern TypeInfo FileWebRequest_t1449_il2cpp_TypeInfo;
// System.Net.FileWebRequest
#include "System_System_Net_FileWebRequest.h"
extern TypeInfo FileWebRequestCreator_t1451_il2cpp_TypeInfo;
// System.Net.FileWebRequestCreator
#include "System_System_Net_FileWebRequestCreator.h"
extern TypeInfo FtpRequestCreator_t1452_il2cpp_TypeInfo;
// System.Net.FtpRequestCreator
#include "System_System_Net_FtpRequestCreator.h"
extern TypeInfo FtpWebRequest_t1454_il2cpp_TypeInfo;
// System.Net.FtpWebRequest
#include "System_System_Net_FtpWebRequest.h"
extern TypeInfo GlobalProxySelection_t1455_il2cpp_TypeInfo;
// System.Net.GlobalProxySelection
#include "System_System_Net_GlobalProxySelection.h"
extern TypeInfo HttpRequestCreator_t1456_il2cpp_TypeInfo;
// System.Net.HttpRequestCreator
#include "System_System_Net_HttpRequestCreator.h"
extern TypeInfo HttpVersion_t1458_il2cpp_TypeInfo;
// System.Net.HttpVersion
#include "System_System_Net_HttpVersion.h"
extern TypeInfo HttpWebRequest_t1461_il2cpp_TypeInfo;
// System.Net.HttpWebRequest
#include "System_System_Net_HttpWebRequest.h"
extern TypeInfo ICertificatePolicy_t1467_il2cpp_TypeInfo;
extern TypeInfo ICredentials_t1471_il2cpp_TypeInfo;
extern TypeInfo IPAddress_t1463_il2cpp_TypeInfo;
// System.Net.IPAddress
#include "System_System_Net_IPAddress.h"
extern TypeInfo IPv6Address_t1464_il2cpp_TypeInfo;
// System.Net.IPv6Address
#include "System_System_Net_IPv6Address.h"
extern TypeInfo IWebProxy_t1448_il2cpp_TypeInfo;
extern TypeInfo IWebRequestCreate_t1637_il2cpp_TypeInfo;
extern TypeInfo SecurityProtocolType_t1465_il2cpp_TypeInfo;
// System.Net.SecurityProtocolType
#include "System_System_Net_SecurityProtocolType.h"
extern TypeInfo ServicePoint_t1460_il2cpp_TypeInfo;
// System.Net.ServicePoint
#include "System_System_Net_ServicePoint.h"
extern TypeInfo SPKey_t1466_il2cpp_TypeInfo;
// System.Net.ServicePointManager/SPKey
#include "System_System_Net_ServicePointManager_SPKey.h"
extern TypeInfo ServicePointManager_t1468_il2cpp_TypeInfo;
// System.Net.ServicePointManager
#include "System_System_Net_ServicePointManager.h"
extern TypeInfo WebHeaderCollection_t1447_il2cpp_TypeInfo;
// System.Net.WebHeaderCollection
#include "System_System_Net_WebHeaderCollection.h"
extern TypeInfo WebProxy_t1472_il2cpp_TypeInfo;
// System.Net.WebProxy
#include "System_System_Net_WebProxy.h"
extern TypeInfo WebRequest_t1450_il2cpp_TypeInfo;
// System.Net.WebRequest
#include "System_System_Net_WebRequest.h"
extern TypeInfo OpenFlags_t1474_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.OpenFlags
#include "System_System_Security_Cryptography_X509Certificates_OpenFla.h"
extern TypeInfo PublicKey_t1478_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.PublicKey
#include "System_System_Security_Cryptography_X509Certificates_PublicK.h"
extern TypeInfo StoreLocation_t1479_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreLocation
#include "System_System_Security_Cryptography_X509Certificates_StoreLo.h"
extern TypeInfo StoreName_t1480_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreName
#include "System_System_Security_Cryptography_X509Certificates_StoreNa.h"
extern TypeInfo X500DistinguishedName_t1481_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System_System_Security_Cryptography_X509Certificates_X500Dis.h"
extern TypeInfo X500DistinguishedNameFlags_t1482_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System_System_Security_Cryptography_X509Certificates_X500Dis_0.h"
extern TypeInfo X509BasicConstraintsExtension_t1483_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Bas.h"
extern TypeInfo X509Certificate2_t1487_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System_System_Security_Cryptography_X509Certificates_X509Cer.h"
extern TypeInfo X509Certificate2Collection_t1489_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_0.h"
extern TypeInfo X509Certificate2Enumerator_t1490_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_2.h"
extern TypeInfo X509CertificateEnumerator_t1491_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_3.h"
extern TypeInfo X509CertificateCollection_t1459_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_1.h"
extern TypeInfo X509Chain_t1499_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Chain
#include "System_System_Security_Cryptography_X509Certificates_X509Cha.h"
extern TypeInfo X509ChainElement_t1497_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_0.h"
extern TypeInfo X509ChainElementCollection_t1493_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_2.h"
extern TypeInfo X509ChainElementEnumerator_t1500_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_3.h"
extern TypeInfo X509ChainPolicy_t1494_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_4.h"
extern TypeInfo X509ChainStatus_t1496_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_5.h"
extern TypeInfo X509ChainStatusFlags_t1502_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_1.h"
extern TypeInfo X509EnhancedKeyUsageExtension_t1503_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Enh.h"
extern TypeInfo X509Extension_t1484_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Extension
#include "System_System_Security_Cryptography_X509Certificates_X509Ext.h"
extern TypeInfo X509ExtensionCollection_t1485_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_0.h"
extern TypeInfo X509ExtensionEnumerator_t1504_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_1.h"
extern TypeInfo X509FindType_t1505_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509FindType
#include "System_System_Security_Cryptography_X509Certificates_X509Fin.h"
extern TypeInfo X509KeyUsageExtension_t1506_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Key.h"
extern TypeInfo X509KeyUsageFlags_t1507_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Key_0.h"
extern TypeInfo X509NameType_t1508_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509NameType
#include "System_System_Security_Cryptography_X509Certificates_X509Nam.h"
extern TypeInfo X509RevocationFlag_t1509_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System_System_Security_Cryptography_X509Certificates_X509Rev.h"
extern TypeInfo X509RevocationMode_t1510_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System_System_Security_Cryptography_X509Certificates_X509Rev_0.h"
extern TypeInfo X509Store_t1498_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Store
#include "System_System_Security_Cryptography_X509Certificates_X509Sto.h"
extern TypeInfo X509SubjectKeyIdentifierExtension_t1512_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Sub.h"
extern TypeInfo X509SubjectKeyIdentifierHashAlgorithm_t1513_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
#include "System_System_Security_Cryptography_X509Certificates_X509Sub_0.h"
extern TypeInfo X509VerificationFlags_t1514_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Ver.h"
extern TypeInfo AsnDecodeStatus_t1515_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnDecodeStatus
#include "System_System_Security_Cryptography_AsnDecodeStatus.h"
extern TypeInfo AsnEncodedData_t1476_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnEncodedData
#include "System_System_Security_Cryptography_AsnEncodedData.h"
extern TypeInfo Oid_t1477_il2cpp_TypeInfo;
// System.Security.Cryptography.Oid
#include "System_System_Security_Cryptography_Oid.h"
extern TypeInfo OidCollection_t1501_il2cpp_TypeInfo;
// System.Security.Cryptography.OidCollection
#include "System_System_Security_Cryptography_OidCollection.h"
extern TypeInfo OidEnumerator_t1516_il2cpp_TypeInfo;
// System.Security.Cryptography.OidEnumerator
#include "System_System_Security_Cryptography_OidEnumerator.h"
extern TypeInfo MatchAppendEvaluator_t1518_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine/MatchAppendEvaluator
#include "System_System_Text_RegularExpressions_BaseMachine_MatchAppen.h"
extern TypeInfo BaseMachine_t1519_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine
#include "System_System_Text_RegularExpressions_BaseMachine.h"
extern TypeInfo Capture_t1520_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Capture
#include "System_System_Text_RegularExpressions_Capture.h"
extern TypeInfo CaptureCollection_t1522_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CaptureCollection
#include "System_System_Text_RegularExpressions_CaptureCollection.h"
extern TypeInfo Group_t1523_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Group
#include "System_System_Text_RegularExpressions_Group.h"
extern TypeInfo GroupCollection_t1525_il2cpp_TypeInfo;
// System.Text.RegularExpressions.GroupCollection
#include "System_System_Text_RegularExpressions_GroupCollection.h"
extern TypeInfo Match_t1517_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Match
#include "System_System_Text_RegularExpressions_Match.h"
extern TypeInfo Enumerator_t1528_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection/Enumerator
#include "System_System_Text_RegularExpressions_MatchCollection_Enumer.h"
extern TypeInfo MatchCollection_t1527_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection
#include "System_System_Text_RegularExpressions_MatchCollection.h"
extern TypeInfo Regex_t792_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Regex
#include "System_System_Text_RegularExpressions_Regex.h"
extern TypeInfo RegexOptions_t1533_il2cpp_TypeInfo;
// System.Text.RegularExpressions.RegexOptions
#include "System_System_Text_RegularExpressions_RegexOptions.h"
extern TypeInfo OpCode_t1534_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpCode
#include "System_System_Text_RegularExpressions_OpCode.h"
extern TypeInfo OpFlags_t1535_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpFlags
#include "System_System_Text_RegularExpressions_OpFlags.h"
extern TypeInfo Position_t1536_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Position
#include "System_System_Text_RegularExpressions_Position.h"
extern TypeInfo IMachine_t1526_il2cpp_TypeInfo;
extern TypeInfo IMachineFactory_t1530_il2cpp_TypeInfo;
extern TypeInfo Key_t1537_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache/Key
#include "System_System_Text_RegularExpressions_FactoryCache_Key.h"
extern TypeInfo FactoryCache_t1529_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache
#include "System_System_Text_RegularExpressions_FactoryCache.h"
extern TypeInfo Node_t1539_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList/Node
#include "System_System_Text_RegularExpressions_MRUList_Node.h"
extern TypeInfo MRUList_t1538_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList
#include "System_System_Text_RegularExpressions_MRUList.h"
extern TypeInfo Category_t1540_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Category
#include "System_System_Text_RegularExpressions_Category.h"
extern TypeInfo CategoryUtils_t1541_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CategoryUtils
#include "System_System_Text_RegularExpressions_CategoryUtils.h"
extern TypeInfo LinkRef_t1542_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkRef
#include "System_System_Text_RegularExpressions_LinkRef.h"
extern TypeInfo ICompiler_t1605_il2cpp_TypeInfo;
extern TypeInfo InterpreterFactory_t1543_il2cpp_TypeInfo;
// System.Text.RegularExpressions.InterpreterFactory
#include "System_System_Text_RegularExpressions_InterpreterFactory.h"
extern TypeInfo Link_t1544_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack/Link
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter.h"
extern TypeInfo PatternLinkStack_t1545_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter_0.h"
extern TypeInfo PatternCompiler_t1547_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler
#include "System_System_Text_RegularExpressions_PatternCompiler.h"
extern TypeInfo LinkStack_t1546_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkStack
#include "System_System_Text_RegularExpressions_LinkStack.h"
extern TypeInfo Mark_t1548_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Mark
#include "System_System_Text_RegularExpressions_Mark.h"
extern TypeInfo IntStack_t1549_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/IntStack
#include "System_System_Text_RegularExpressions_Interpreter_IntStack.h"
extern TypeInfo RepeatContext_t1550_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/RepeatContext
#include "System_System_Text_RegularExpressions_Interpreter_RepeatCont.h"
extern TypeInfo Mode_t1551_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/Mode
#include "System_System_Text_RegularExpressions_Interpreter_Mode.h"
extern TypeInfo Interpreter_t1554_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter
#include "System_System_Text_RegularExpressions_Interpreter.h"
extern TypeInfo Interval_t1555_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interval
#include "System_System_Text_RegularExpressions_Interval.h"
extern TypeInfo Enumerator_t1556_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/Enumerator
#include "System_System_Text_RegularExpressions_IntervalCollection_Enu.h"
extern TypeInfo CostDelegate_t1557_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/CostDelegate
#include "System_System_Text_RegularExpressions_IntervalCollection_Cos.h"
extern TypeInfo IntervalCollection_t1558_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection
#include "System_System_Text_RegularExpressions_IntervalCollection.h"
extern TypeInfo Parser_t1559_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Parser
#include "System_System_Text_RegularExpressions_Syntax_Parser.h"
extern TypeInfo QuickSearch_t1552_il2cpp_TypeInfo;
// System.Text.RegularExpressions.QuickSearch
#include "System_System_Text_RegularExpressions_QuickSearch.h"
extern TypeInfo ReplacementEvaluator_t1560_il2cpp_TypeInfo;
// System.Text.RegularExpressions.ReplacementEvaluator
#include "System_System_Text_RegularExpressions_ReplacementEvaluator.h"
extern TypeInfo ExpressionCollection_t1561_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionCollection
#include "System_System_Text_RegularExpressions_Syntax_ExpressionColle.h"
extern TypeInfo Expression_t1562_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Expression
#include "System_System_Text_RegularExpressions_Syntax_Expression.h"
extern TypeInfo CompositeExpression_t1563_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CompositeExpression
#include "System_System_Text_RegularExpressions_Syntax_CompositeExpres.h"
extern TypeInfo Group_t1564_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Group
#include "System_System_Text_RegularExpressions_Syntax_Group.h"
extern TypeInfo RegularExpression_t1565_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.RegularExpression
#include "System_System_Text_RegularExpressions_Syntax_RegularExpressi.h"
extern TypeInfo CapturingGroup_t1566_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CapturingGroup
#include "System_System_Text_RegularExpressions_Syntax_CapturingGroup.h"
extern TypeInfo BalancingGroup_t1567_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BalancingGroup
#include "System_System_Text_RegularExpressions_Syntax_BalancingGroup.h"
extern TypeInfo NonBacktrackingGroup_t1568_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.NonBacktrackingGroup
#include "System_System_Text_RegularExpressions_Syntax_NonBacktracking.h"
extern TypeInfo Repetition_t1569_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Repetition
#include "System_System_Text_RegularExpressions_Syntax_Repetition.h"
extern TypeInfo Assertion_t1570_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Assertion
#include "System_System_Text_RegularExpressions_Syntax_Assertion.h"
extern TypeInfo CaptureAssertion_t1573_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CaptureAssertion
#include "System_System_Text_RegularExpressions_Syntax_CaptureAssertio.h"
extern TypeInfo ExpressionAssertion_t1571_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionAssertion
#include "System_System_Text_RegularExpressions_Syntax_ExpressionAsser.h"
extern TypeInfo Alternation_t1574_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Alternation
#include "System_System_Text_RegularExpressions_Syntax_Alternation.h"
extern TypeInfo Literal_t1572_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Literal
#include "System_System_Text_RegularExpressions_Syntax_Literal.h"
extern TypeInfo PositionAssertion_t1575_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.PositionAssertion
#include "System_System_Text_RegularExpressions_Syntax_PositionAsserti.h"
extern TypeInfo Reference_t1576_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Reference
#include "System_System_Text_RegularExpressions_Syntax_Reference.h"
extern TypeInfo BackslashNumber_t1577_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BackslashNumber
#include "System_System_Text_RegularExpressions_Syntax_BackslashNumber.h"
extern TypeInfo CharacterClass_t1579_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CharacterClass
#include "System_System_Text_RegularExpressions_Syntax_CharacterClass.h"
extern TypeInfo AnchorInfo_t1580_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.AnchorInfo
#include "System_System_Text_RegularExpressions_Syntax_AnchorInfo.h"
extern TypeInfo DefaultUriParser_t1581_il2cpp_TypeInfo;
// System.DefaultUriParser
#include "System_System_DefaultUriParser.h"
extern TypeInfo GenericUriParser_t1583_il2cpp_TypeInfo;
// System.GenericUriParser
#include "System_System_GenericUriParser.h"
extern TypeInfo UriScheme_t1584_il2cpp_TypeInfo;
// System.Uri/UriScheme
#include "System_System_Uri_UriScheme.h"
extern TypeInfo Uri_t1035_il2cpp_TypeInfo;
// System.Uri
#include "System_System_Uri.h"
extern TypeInfo UriFormatException_t1586_il2cpp_TypeInfo;
// System.UriFormatException
#include "System_System_UriFormatException.h"
extern TypeInfo UriHostNameType_t1587_il2cpp_TypeInfo;
// System.UriHostNameType
#include "System_System_UriHostNameType.h"
extern TypeInfo UriKind_t1588_il2cpp_TypeInfo;
// System.UriKind
#include "System_System_UriKind.h"
extern TypeInfo UriParser_t1582_il2cpp_TypeInfo;
// System.UriParser
#include "System_System_UriParser.h"
extern TypeInfo UriPartial_t1589_il2cpp_TypeInfo;
// System.UriPartial
#include "System_System_UriPartial.h"
extern TypeInfo UriTypeConverter_t1590_il2cpp_TypeInfo;
// System.UriTypeConverter
#include "System_System_UriTypeConverter.h"
extern TypeInfo RemoteCertificateValidationCallback_t1453_il2cpp_TypeInfo;
// System.Net.Security.RemoteCertificateValidationCallback
#include "System_System_Net_Security_RemoteCertificateValidationCallba.h"
extern TypeInfo MatchEvaluator_t1591_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchEvaluator
#include "System_System_Text_RegularExpressions_MatchEvaluator.h"
extern TypeInfo U24ArrayTypeU24128_t1592_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$128
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU24128.h"
extern TypeInfo U24ArrayTypeU2412_t1593_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$12
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU2412.h"
extern TypeInfo U3CPrivateImplementationDetailsU3E_t1594_il2cpp_TypeInfo;
// <PrivateImplementationDetails>
#include "System_U3CPrivateImplementationDetailsU3E.h"
#include <map>
struct TypeInfo;
struct MethodInfo;
TypeInfo* g_System_Assembly_Types[162] = 
{
	&U3CModuleU3E_t1423_il2cpp_TypeInfo,
	&Locale_t1424_il2cpp_TypeInfo,
	&MonoTODOAttribute_t1425_il2cpp_TypeInfo,
	&GeneratedCodeAttribute_t1215_il2cpp_TypeInfo,
	&Enumerator_t1633_il2cpp_TypeInfo,
	&LinkedList_1_t1632_il2cpp_TypeInfo,
	&LinkedListNode_1_t1634_il2cpp_TypeInfo,
	&Enumerator_t1636_il2cpp_TypeInfo,
	&Stack_1_t1635_il2cpp_TypeInfo,
	&HybridDictionary_t1428_il2cpp_TypeInfo,
	&DictionaryNode_t1429_il2cpp_TypeInfo,
	&DictionaryNodeEnumerator_t1430_il2cpp_TypeInfo,
	&ListDictionary_t1427_il2cpp_TypeInfo,
	&_Item_t1432_il2cpp_TypeInfo,
	&_KeysEnumerator_t1434_il2cpp_TypeInfo,
	&KeysCollection_t1435_il2cpp_TypeInfo,
	&NameObjectCollectionBase_t1433_il2cpp_TypeInfo,
	&NameValueCollection_t1439_il2cpp_TypeInfo,
	&DefaultValueAttribute_t1212_il2cpp_TypeInfo,
	&EditorBrowsableAttribute_t1209_il2cpp_TypeInfo,
	&EditorBrowsableState_t1440_il2cpp_TypeInfo,
	&TypeConverter_t1441_il2cpp_TypeInfo,
	&TypeConverterAttribute_t1442_il2cpp_TypeInfo,
	&AuthenticationLevel_t1443_il2cpp_TypeInfo,
	&SslPolicyErrors_t1444_il2cpp_TypeInfo,
	&AddressFamily_t1445_il2cpp_TypeInfo,
	&DefaultCertificatePolicy_t1446_il2cpp_TypeInfo,
	&FileWebRequest_t1449_il2cpp_TypeInfo,
	&FileWebRequestCreator_t1451_il2cpp_TypeInfo,
	&FtpRequestCreator_t1452_il2cpp_TypeInfo,
	&FtpWebRequest_t1454_il2cpp_TypeInfo,
	&GlobalProxySelection_t1455_il2cpp_TypeInfo,
	&HttpRequestCreator_t1456_il2cpp_TypeInfo,
	&HttpVersion_t1458_il2cpp_TypeInfo,
	&HttpWebRequest_t1461_il2cpp_TypeInfo,
	&ICertificatePolicy_t1467_il2cpp_TypeInfo,
	&ICredentials_t1471_il2cpp_TypeInfo,
	&IPAddress_t1463_il2cpp_TypeInfo,
	&IPv6Address_t1464_il2cpp_TypeInfo,
	&IWebProxy_t1448_il2cpp_TypeInfo,
	&IWebRequestCreate_t1637_il2cpp_TypeInfo,
	&SecurityProtocolType_t1465_il2cpp_TypeInfo,
	&ServicePoint_t1460_il2cpp_TypeInfo,
	&SPKey_t1466_il2cpp_TypeInfo,
	&ServicePointManager_t1468_il2cpp_TypeInfo,
	&WebHeaderCollection_t1447_il2cpp_TypeInfo,
	&WebProxy_t1472_il2cpp_TypeInfo,
	&WebRequest_t1450_il2cpp_TypeInfo,
	&OpenFlags_t1474_il2cpp_TypeInfo,
	&PublicKey_t1478_il2cpp_TypeInfo,
	&StoreLocation_t1479_il2cpp_TypeInfo,
	&StoreName_t1480_il2cpp_TypeInfo,
	&X500DistinguishedName_t1481_il2cpp_TypeInfo,
	&X500DistinguishedNameFlags_t1482_il2cpp_TypeInfo,
	&X509BasicConstraintsExtension_t1483_il2cpp_TypeInfo,
	&X509Certificate2_t1487_il2cpp_TypeInfo,
	&X509Certificate2Collection_t1489_il2cpp_TypeInfo,
	&X509Certificate2Enumerator_t1490_il2cpp_TypeInfo,
	&X509CertificateEnumerator_t1491_il2cpp_TypeInfo,
	&X509CertificateCollection_t1459_il2cpp_TypeInfo,
	&X509Chain_t1499_il2cpp_TypeInfo,
	&X509ChainElement_t1497_il2cpp_TypeInfo,
	&X509ChainElementCollection_t1493_il2cpp_TypeInfo,
	&X509ChainElementEnumerator_t1500_il2cpp_TypeInfo,
	&X509ChainPolicy_t1494_il2cpp_TypeInfo,
	&X509ChainStatus_t1496_il2cpp_TypeInfo,
	&X509ChainStatusFlags_t1502_il2cpp_TypeInfo,
	&X509EnhancedKeyUsageExtension_t1503_il2cpp_TypeInfo,
	&X509Extension_t1484_il2cpp_TypeInfo,
	&X509ExtensionCollection_t1485_il2cpp_TypeInfo,
	&X509ExtensionEnumerator_t1504_il2cpp_TypeInfo,
	&X509FindType_t1505_il2cpp_TypeInfo,
	&X509KeyUsageExtension_t1506_il2cpp_TypeInfo,
	&X509KeyUsageFlags_t1507_il2cpp_TypeInfo,
	&X509NameType_t1508_il2cpp_TypeInfo,
	&X509RevocationFlag_t1509_il2cpp_TypeInfo,
	&X509RevocationMode_t1510_il2cpp_TypeInfo,
	&X509Store_t1498_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierExtension_t1512_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierHashAlgorithm_t1513_il2cpp_TypeInfo,
	&X509VerificationFlags_t1514_il2cpp_TypeInfo,
	&AsnDecodeStatus_t1515_il2cpp_TypeInfo,
	&AsnEncodedData_t1476_il2cpp_TypeInfo,
	&Oid_t1477_il2cpp_TypeInfo,
	&OidCollection_t1501_il2cpp_TypeInfo,
	&OidEnumerator_t1516_il2cpp_TypeInfo,
	&MatchAppendEvaluator_t1518_il2cpp_TypeInfo,
	&BaseMachine_t1519_il2cpp_TypeInfo,
	&Capture_t1520_il2cpp_TypeInfo,
	&CaptureCollection_t1522_il2cpp_TypeInfo,
	&Group_t1523_il2cpp_TypeInfo,
	&GroupCollection_t1525_il2cpp_TypeInfo,
	&Match_t1517_il2cpp_TypeInfo,
	&Enumerator_t1528_il2cpp_TypeInfo,
	&MatchCollection_t1527_il2cpp_TypeInfo,
	&Regex_t792_il2cpp_TypeInfo,
	&RegexOptions_t1533_il2cpp_TypeInfo,
	&OpCode_t1534_il2cpp_TypeInfo,
	&OpFlags_t1535_il2cpp_TypeInfo,
	&Position_t1536_il2cpp_TypeInfo,
	&IMachine_t1526_il2cpp_TypeInfo,
	&IMachineFactory_t1530_il2cpp_TypeInfo,
	&Key_t1537_il2cpp_TypeInfo,
	&FactoryCache_t1529_il2cpp_TypeInfo,
	&Node_t1539_il2cpp_TypeInfo,
	&MRUList_t1538_il2cpp_TypeInfo,
	&Category_t1540_il2cpp_TypeInfo,
	&CategoryUtils_t1541_il2cpp_TypeInfo,
	&LinkRef_t1542_il2cpp_TypeInfo,
	&ICompiler_t1605_il2cpp_TypeInfo,
	&InterpreterFactory_t1543_il2cpp_TypeInfo,
	&Link_t1544_il2cpp_TypeInfo,
	&PatternLinkStack_t1545_il2cpp_TypeInfo,
	&PatternCompiler_t1547_il2cpp_TypeInfo,
	&LinkStack_t1546_il2cpp_TypeInfo,
	&Mark_t1548_il2cpp_TypeInfo,
	&IntStack_t1549_il2cpp_TypeInfo,
	&RepeatContext_t1550_il2cpp_TypeInfo,
	&Mode_t1551_il2cpp_TypeInfo,
	&Interpreter_t1554_il2cpp_TypeInfo,
	&Interval_t1555_il2cpp_TypeInfo,
	&Enumerator_t1556_il2cpp_TypeInfo,
	&CostDelegate_t1557_il2cpp_TypeInfo,
	&IntervalCollection_t1558_il2cpp_TypeInfo,
	&Parser_t1559_il2cpp_TypeInfo,
	&QuickSearch_t1552_il2cpp_TypeInfo,
	&ReplacementEvaluator_t1560_il2cpp_TypeInfo,
	&ExpressionCollection_t1561_il2cpp_TypeInfo,
	&Expression_t1562_il2cpp_TypeInfo,
	&CompositeExpression_t1563_il2cpp_TypeInfo,
	&Group_t1564_il2cpp_TypeInfo,
	&RegularExpression_t1565_il2cpp_TypeInfo,
	&CapturingGroup_t1566_il2cpp_TypeInfo,
	&BalancingGroup_t1567_il2cpp_TypeInfo,
	&NonBacktrackingGroup_t1568_il2cpp_TypeInfo,
	&Repetition_t1569_il2cpp_TypeInfo,
	&Assertion_t1570_il2cpp_TypeInfo,
	&CaptureAssertion_t1573_il2cpp_TypeInfo,
	&ExpressionAssertion_t1571_il2cpp_TypeInfo,
	&Alternation_t1574_il2cpp_TypeInfo,
	&Literal_t1572_il2cpp_TypeInfo,
	&PositionAssertion_t1575_il2cpp_TypeInfo,
	&Reference_t1576_il2cpp_TypeInfo,
	&BackslashNumber_t1577_il2cpp_TypeInfo,
	&CharacterClass_t1579_il2cpp_TypeInfo,
	&AnchorInfo_t1580_il2cpp_TypeInfo,
	&DefaultUriParser_t1581_il2cpp_TypeInfo,
	&GenericUriParser_t1583_il2cpp_TypeInfo,
	&UriScheme_t1584_il2cpp_TypeInfo,
	&Uri_t1035_il2cpp_TypeInfo,
	&UriFormatException_t1586_il2cpp_TypeInfo,
	&UriHostNameType_t1587_il2cpp_TypeInfo,
	&UriKind_t1588_il2cpp_TypeInfo,
	&UriParser_t1582_il2cpp_TypeInfo,
	&UriPartial_t1589_il2cpp_TypeInfo,
	&UriTypeConverter_t1590_il2cpp_TypeInfo,
	&RemoteCertificateValidationCallback_t1453_il2cpp_TypeInfo,
	&MatchEvaluator_t1591_il2cpp_TypeInfo,
	&U24ArrayTypeU24128_t1592_il2cpp_TypeInfo,
	&U24ArrayTypeU2412_t1593_il2cpp_TypeInfo,
	&U3CPrivateImplementationDetailsU3E_t1594_il2cpp_TypeInfo,
	NULL,
};
extern Il2CppImage g_System_dll_Image;
Il2CppAssembly g_System_Assembly = 
{
	{ "System", NULL, NULL, "\x0\x24\x0\x0\x4\x80\x0\x0\x94\x0\x0\x0\x6\x2\x0\x0\x0\x24\x0\x0\x52\x53\x41\x31\x0\x4\x0\x0\x1\x0\x1\x0\x8D\x56\xC7\x6F\x9E\x86\x49\x38\x30\x49\xF3\x83\xC4\x4B\xE0\xEC\x20\x41\x81\x82\x2A\x6C\x31\xCF\x5E\xB7\xEF\x48\x69\x44\xD0\x32\x18\x8E\xA1\xD3\x92\x7\x63\x71\x2C\xCB\x12\xD7\x5F\xB7\x7E\x98\x11\x14\x9E\x61\x48\xE5\xD3\x2F\xBA\xAB\x37\x61\x1C\x18\x78\xDD\xC1\x9E\x20\xEF\x13\x5D\xC\xB2\xCF\xF2\xBF\xEC\x3D\x11\x58\x10\xC3\xD9\x6\x96\x38\xFE\x4B\xE2\x15\xDB\xF7\x95\x86\x19\x20\xE5\xAB\x6F\x7D\xB2\xE2\xCE\xEF\x13\x6A\xC2\x3D\x5D\xD2\xBF\x3\x17\x0\xAE\xC2\x32\xF6\xC6\xB1\xC7\x85\xB4\x30\x5C\x12\x3B\x37\xAB", { 0x7C, 0xEC, 0x85, 0xD7, 0xBE, 0xA7, 0x79, 0x8E }, 32772, 0, 1, 2, 0, 5, 0 },
	&g_System_dll_Image,
	1,
};
extern const CustomAttributesCacheGenerator g_System_Assembly_AttributeGenerators[77];
static const char* s_StringTable[683] = 
{
	"comment",
	"tool",
	"version",
	"list",
	"current",
	"index",
	"count",
	"syncRoot",
	"first",
	"si",
	"item",
	"container",
	"forward",
	"back",
	"parent",
	"idx",
	"_version",
	"INITIAL_SIZE",
	"_array",
	"_size",
	"caseInsensitive",
	"hashtable",
	"key",
	"value",
	"next",
	"dict",
	"isAtStart",
	"head",
	"comparer",
	"m_collection",
	"m_position",
	"m_ItemsContainer",
	"m_NullKeyItem",
	"m_ItemsArray",
	"m_hashprovider",
	"m_comparer",
	"m_defCapacity",
	"m_readonly",
	"infoCopy",
	"keyscoll",
	"equality_comparer",
	"cachedAllKeys",
	"cachedAll",
	"DefaultValue",
	"state",
	"value__",
	"Always",
	"Never",
	"Advanced",
	"Default",
	"converter_type",
	"None",
	"MutualAuthRequested",
	"MutualAuthRequired",
	"RemoteCertificateNotAvailable",
	"RemoteCertificateNameMismatch",
	"RemoteCertificateChainErrors",
	"Unknown",
	"Unspecified",
	"Unix",
	"InterNetwork",
	"ImpLink",
	"Pup",
	"Chaos",
	"NS",
	"Ipx",
	"Iso",
	"Osi",
	"Ecma",
	"DataKit",
	"Ccitt",
	"Sna",
	"DecNet",
	"DataLink",
	"Lat",
	"HyperChannel",
	"AppleTalk",
	"NetBios",
	"VoiceView",
	"FireFox",
	"Banyan",
	"Atm",
	"InterNetworkV6",
	"Cluster",
	"Ieee12844",
	"Irda",
	"NetworkDesigners",
	"Max",
	"uri",
	"webHeaders",
	"connectionGroup",
	"contentLength",
	"fileAccess",
	"method",
	"proxy",
	"preAuthenticate",
	"timeout",
	"requestUri",
	"rwTimeout",
	"binary",
	"usePassive",
	"locker",
	"supportedCommands",
	"callback",
	"<>f__am$cache1C",
	"Version10",
	"Version11",
	"actualUri",
	"hostChanged",
	"allowAutoRedirect",
	"allowBuffering",
	"certificates",
	"keepAlive",
	"maxAutoRedirect",
	"mediaType",
	"initialMethod",
	"pipelined",
	"sendChunked",
	"servicePoint",
	"redirects",
	"defaultMaxResponseHeadersLength",
	"readWriteTimeout",
	"m_Address",
	"m_Family",
	"m_Numbers",
	"m_ScopeId",
	"Any",
	"Broadcast",
	"Loopback",
	"IPv6Any",
	"IPv6Loopback",
	"IPv6None",
	"address",
	"prefixLength",
	"scopeId",
	"Ssl3",
	"Tls",
	"connectionLimit",
	"maxIdleTime",
	"currentConnections",
	"idleSince",
	"usesProxy",
	"sendContinue",
	"useConnect",
	"hostE",
	"useNagle",
	"use_connect",
	"servicePoints",
	"policy",
	"defaultConnectionLimit",
	"maxServicePointIdleTime",
	"maxServicePoints",
	"_checkCRL",
	"_securityProtocol",
	"expectContinue",
	"server_cert_cb",
	"restricted",
	"multiValue",
	"restricted_response",
	"internallyCreated",
	"allowed_chars",
	"bypassOnLocal",
	"bypassList",
	"credentials",
	"useDefaultCredentials",
	"prefixes",
	"isDefaultWebProxySet",
	"defaultWebProxy",
	"authentication_level",
	"lockobj",
	"ReadOnly",
	"ReadWrite",
	"MaxAllowed",
	"OpenExistingOnly",
	"IncludeArchived",
	"_key",
	"_keyValue",
	"_params",
	"_oid",
	"<>f__switch$map9",
	"CurrentUser",
	"LocalMachine",
	"AddressBook",
	"AuthRoot",
	"CertificateAuthority",
	"Disallowed",
	"My",
	"Root",
	"TrustedPeople",
	"TrustedPublisher",
	"name",
	"Reversed",
	"UseSemicolons",
	"DoNotUsePlusSign",
	"DoNotUseQuotes",
	"UseCommas",
	"UseNewLines",
	"UseUTF8Encoding",
	"UseT61Encoding",
	"ForceUTF8Encoding",
	"oid",
	"friendlyName",
	"_certificateAuthority",
	"_hasPathLengthConstraint",
	"_pathLengthConstraint",
	"_status",
	"_archived",
	"_extensions",
	"_name",
	"_serial",
	"_publicKey",
	"issuer_name",
	"subject_name",
	"signature_algorithm",
	"_cert",
	"empty_error",
	"commonName",
	"email",
	"signedData",
	"enumerator",
	"location",
	"elements",
	"status",
	"Empty",
	"max_path_length",
	"working_issuer_name",
	"working_public_key",
	"bce_restriction",
	"roots",
	"cas",
	"collection",
	"<>f__switch$mapB",
	"<>f__switch$mapC",
	"<>f__switch$mapD",
	"certificate",
	"info",
	"compressed_status_flags",
	"_list",
	"apps",
	"cert",
	"store",
	"rflag",
	"mode",
	"vflags",
	"vtime",
	"NoError",
	"NotTimeValid",
	"NotTimeNested",
	"Revoked",
	"NotSignatureValid",
	"NotValidForUsage",
	"UntrustedRoot",
	"RevocationStatusUnknown",
	"Cyclic",
	"InvalidExtension",
	"InvalidPolicyConstraints",
	"InvalidBasicConstraints",
	"InvalidNameConstraints",
	"HasNotSupportedNameConstraint",
	"HasNotDefinedNameConstraint",
	"HasNotPermittedNameConstraint",
	"HasExcludedNameConstraint",
	"PartialChain",
	"CtlNotTimeValid",
	"CtlNotSignatureValid",
	"CtlNotValidForUsage",
	"OfflineRevocation",
	"NoIssuanceChainPolicy",
	"_enhKeyUsage",
	"<>f__switch$mapE",
	"_critical",
	"FindByThumbprint",
	"FindBySubjectName",
	"FindBySubjectDistinguishedName",
	"FindByIssuerName",
	"FindByIssuerDistinguishedName",
	"FindBySerialNumber",
	"FindByTimeValid",
	"FindByTimeNotYetValid",
	"FindByTimeExpired",
	"FindByTemplateName",
	"FindByApplicationPolicy",
	"FindByCertificatePolicy",
	"FindByExtension",
	"FindByKeyUsage",
	"FindBySubjectKeyIdentifier",
	"all",
	"_keyUsages",
	"EncipherOnly",
	"CrlSign",
	"KeyCertSign",
	"KeyAgreement",
	"DataEncipherment",
	"KeyEncipherment",
	"NonRepudiation",
	"DigitalSignature",
	"DecipherOnly",
	"SimpleName",
	"EmailName",
	"UpnName",
	"DnsName",
	"DnsFromAlternativeName",
	"UrlName",
	"EndCertificateOnly",
	"EntireChain",
	"ExcludeRoot",
	"NoCheck",
	"Online",
	"Offline",
	"_location",
	"_flags",
	"<>f__switch$mapF",
	"_subjectKeyIdentifier",
	"_ski",
	"Sha1",
	"ShortSha1",
	"CapiSha1",
	"NoFlag",
	"IgnoreNotTimeValid",
	"IgnoreCtlNotTimeValid",
	"IgnoreNotTimeNested",
	"IgnoreInvalidBasicConstraints",
	"AllowUnknownCertificateAuthority",
	"IgnoreWrongUsage",
	"IgnoreInvalidName",
	"IgnoreInvalidPolicy",
	"IgnoreEndRevocationUnknown",
	"IgnoreCtlSignerRevocationUnknown",
	"IgnoreCertificateAuthorityRevocationUnknown",
	"IgnoreRootRevocationUnknown",
	"AllFlags",
	"NotDecoded",
	"Ok",
	"BadAsn",
	"BadTag",
	"BadLength",
	"InformationNotAvailable",
	"_raw",
	"<>f__switch$mapA",
	"_value",
	"<>f__switch$map10",
	"_readOnly",
	"_collection",
	"_position",
	"needs_groups_or_captures",
	"length",
	"text",
	"Fail",
	"success",
	"captures",
	"gap",
	"regex",
	"machine",
	"text_length",
	"groups",
	"empty",
	"coll",
	"cache",
	"machineFactory",
	"mapping",
	"group_count",
	"refsInitialized",
	"group_names",
	"group_numbers",
	"pattern",
	"roptions",
	"capnames",
	"caps",
	"capsize",
	"capslist",
	"IgnoreCase",
	"Multiline",
	"ExplicitCapture",
	"Singleline",
	"IgnorePatternWhitespace",
	"RightToLeft",
	"ECMAScript",
	"CultureInvariant",
	"False",
	"True",
	"Position",
	"String",
	"Reference",
	"Character",
	"Category",
	"NotCategory",
	"Range",
	"Set",
	"In",
	"Open",
	"Close",
	"Balance",
	"BalanceStart",
	"IfDefined",
	"Sub",
	"Test",
	"Branch",
	"Jump",
	"Repeat",
	"Until",
	"FastRepeat",
	"Anchor",
	"Info",
	"Negate",
	"Lazy",
	"Start",
	"StartOfString",
	"StartOfLine",
	"StartOfScan",
	"End",
	"EndOfString",
	"EndOfLine",
	"Boundary",
	"NonBoundary",
	"options",
	"capacity",
	"factories",
	"mru_list",
	"previous",
	"tail",
	"AnySingleline",
	"Word",
	"Digit",
	"WhiteSpace",
	"EcmaAny",
	"EcmaAnySingleline",
	"EcmaWord",
	"EcmaDigit",
	"EcmaWhiteSpace",
	"UnicodeL",
	"UnicodeM",
	"UnicodeN",
	"UnicodeZ",
	"UnicodeP",
	"UnicodeS",
	"UnicodeC",
	"UnicodeLu",
	"UnicodeLl",
	"UnicodeLt",
	"UnicodeLm",
	"UnicodeLo",
	"UnicodeMn",
	"UnicodeMe",
	"UnicodeMc",
	"UnicodeNd",
	"UnicodeNl",
	"UnicodeNo",
	"UnicodeZs",
	"UnicodeZl",
	"UnicodeZp",
	"UnicodePd",
	"UnicodePs",
	"UnicodePi",
	"UnicodePe",
	"UnicodePf",
	"UnicodePc",
	"UnicodePo",
	"UnicodeSm",
	"UnicodeSc",
	"UnicodeSk",
	"UnicodeSo",
	"UnicodeCc",
	"UnicodeCf",
	"UnicodeCo",
	"UnicodeCs",
	"UnicodeCn",
	"UnicodeBasicLatin",
	"UnicodeLatin1Supplement",
	"UnicodeLatinExtendedA",
	"UnicodeLatinExtendedB",
	"UnicodeIPAExtensions",
	"UnicodeSpacingModifierLetters",
	"UnicodeCombiningDiacriticalMarks",
	"UnicodeGreek",
	"UnicodeCyrillic",
	"UnicodeArmenian",
	"UnicodeHebrew",
	"UnicodeArabic",
	"UnicodeSyriac",
	"UnicodeThaana",
	"UnicodeDevanagari",
	"UnicodeBengali",
	"UnicodeGurmukhi",
	"UnicodeGujarati",
	"UnicodeOriya",
	"UnicodeTamil",
	"UnicodeTelugu",
	"UnicodeKannada",
	"UnicodeMalayalam",
	"UnicodeSinhala",
	"UnicodeThai",
	"UnicodeLao",
	"UnicodeTibetan",
	"UnicodeMyanmar",
	"UnicodeGeorgian",
	"UnicodeHangulJamo",
	"UnicodeEthiopic",
	"UnicodeCherokee",
	"UnicodeUnifiedCanadianAboriginalSyllabics",
	"UnicodeOgham",
	"UnicodeRunic",
	"UnicodeKhmer",
	"UnicodeMongolian",
	"UnicodeLatinExtendedAdditional",
	"UnicodeGreekExtended",
	"UnicodeGeneralPunctuation",
	"UnicodeSuperscriptsandSubscripts",
	"UnicodeCurrencySymbols",
	"UnicodeCombiningMarksforSymbols",
	"UnicodeLetterlikeSymbols",
	"UnicodeNumberForms",
	"UnicodeArrows",
	"UnicodeMathematicalOperators",
	"UnicodeMiscellaneousTechnical",
	"UnicodeControlPictures",
	"UnicodeOpticalCharacterRecognition",
	"UnicodeEnclosedAlphanumerics",
	"UnicodeBoxDrawing",
	"UnicodeBlockElements",
	"UnicodeGeometricShapes",
	"UnicodeMiscellaneousSymbols",
	"UnicodeDingbats",
	"UnicodeBraillePatterns",
	"UnicodeCJKRadicalsSupplement",
	"UnicodeKangxiRadicals",
	"UnicodeIdeographicDescriptionCharacters",
	"UnicodeCJKSymbolsandPunctuation",
	"UnicodeHiragana",
	"UnicodeKatakana",
	"UnicodeBopomofo",
	"UnicodeHangulCompatibilityJamo",
	"UnicodeKanbun",
	"UnicodeBopomofoExtended",
	"UnicodeEnclosedCJKLettersandMonths",
	"UnicodeCJKCompatibility",
	"UnicodeCJKUnifiedIdeographsExtensionA",
	"UnicodeCJKUnifiedIdeographs",
	"UnicodeYiSyllables",
	"UnicodeYiRadicals",
	"UnicodeHangulSyllables",
	"UnicodeHighSurrogates",
	"UnicodeHighPrivateUseSurrogates",
	"UnicodeLowSurrogates",
	"UnicodePrivateUse",
	"UnicodeCJKCompatibilityIdeographs",
	"UnicodeAlphabeticPresentationForms",
	"UnicodeArabicPresentationFormsA",
	"UnicodeCombiningHalfMarks",
	"UnicodeCJKCompatibilityForms",
	"UnicodeSmallFormVariants",
	"UnicodeArabicPresentationFormsB",
	"UnicodeSpecials",
	"UnicodeHalfwidthandFullwidthForms",
	"UnicodeOldItalic",
	"UnicodeGothic",
	"UnicodeDeseret",
	"UnicodeByzantineMusicalSymbols",
	"UnicodeMusicalSymbols",
	"UnicodeMathematicalAlphanumericSymbols",
	"UnicodeCJKUnifiedIdeographsExtensionB",
	"UnicodeCJKCompatibilityIdeographsSupplement",
	"UnicodeTags",
	"LastValue",
	"namesMapping",
	"base_addr",
	"offset_addr",
	"link",
	"pgm",
	"stack",
	"Previous",
	"values",
	"start",
	"min",
	"max",
	"lazy",
	"expr_pc",
	"Search",
	"Match",
	"Count",
	"program",
	"program_start",
	"text_end",
	"match_min",
	"qs",
	"scan_ptr",
	"repeat",
	"fast",
	"deep",
	"marks",
	"mark_start",
	"mark_end",
	"low",
	"high",
	"contiguous",
	"ptr",
	"intervals",
	"refs",
	"num_groups",
	"str",
	"len",
	"ignore",
	"reverse",
	"shift",
	"shiftExtended",
	"THRESHOLD",
	"n_pieces",
	"pieces",
	"replacement",
	"expressions",
	"gid",
	"balance",
	"alternate",
	"group",
	"literal",
	"negate",
	"pos",
	"ecma",
	"upper_case_characters",
	"pos_cats",
	"neg_cats",
	"expr",
	"offset",
	"width",
	"scheme",
	"delimiter",
	"defaultPort",
	"MaxUriLength",
	"isUnixFilePath",
	"source",
	"host",
	"port",
	"path",
	"query",
	"fragment",
	"userinfo",
	"isUnc",
	"isOpaquePart",
	"isAbsoluteUri",
	"segments",
	"userEscaped",
	"cachedAbsoluteUri",
	"cachedToString",
	"cachedLocalPath",
	"cachedHashCode",
	"hexUpperChars",
	"SchemeDelimiter",
	"UriSchemeFile",
	"UriSchemeFtp",
	"UriSchemeGopher",
	"UriSchemeHttp",
	"UriSchemeHttps",
	"UriSchemeMailto",
	"UriSchemeNews",
	"UriSchemeNntp",
	"UriSchemeNetPipe",
	"UriSchemeNetTcp",
	"schemes",
	"parser",
	"<>f__switch$map12",
	"<>f__switch$map13",
	"<>f__switch$map14",
	"<>f__switch$map15",
	"<>f__switch$map16",
	"Basic",
	"Dns",
	"IPv4",
	"IPv6",
	"RelativeOrAbsolute",
	"Absolute",
	"Relative",
	"lock_object",
	"table",
	"scheme_name",
	"default_port",
	"uri_regex",
	"auth_regex",
	"Scheme",
	"Authority",
	"Path",
	"Query",
	"$$field-2",
	"$$field-3",
	"$$field-4",
};
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
static const Il2CppFieldDefinition s_FieldTable[820] = 
{
	{ 0, 75, offsetof(MonoTODOAttribute_t1425, ___comment_0), 0 } ,
	{ 1, 75, offsetof(GeneratedCodeAttribute_t1215, ___tool_0), 0 } ,
	{ 2, 75, offsetof(GeneratedCodeAttribute_t1215, ___version_1), 0 } ,
	{ 3, 2951, 0, 0 } ,
	{ 4, 2952, 0, 0 } ,
	{ 5, 101, 0, 0 } ,
	{ 2, 2328, 0, 0 } ,
	{ 6, 2328, 0, 0 } ,
	{ 2, 2328, 0, 0 } ,
	{ 7, 2647, 0, 0 } ,
	{ 8, 2962, 0, 0 } ,
	{ 9, 2963, 0, 0 } ,
	{ 10, 2970, 0, 0 } ,
	{ 11, 2971, 0, 0 } ,
	{ 12, 2972, 0, 0 } ,
	{ 13, 2972, 0, 0 } ,
	{ 14, 2977, 0, 0 } ,
	{ 15, 101, 0, 0 } ,
	{ 16, 101, 0, 0 } ,
	{ 17, 99, 0, 0 } ,
	{ 18, 2985, 0, 0 } ,
	{ 19, 101, 0, 0 } ,
	{ 16, 101, 0, 0 } ,
	{ 20, 76, offsetof(HybridDictionary_t1428, ___caseInsensitive_0), 0 } ,
	{ 21, 2988, offsetof(HybridDictionary_t1428, ___hashtable_1), 0 } ,
	{ 3, 2989, offsetof(HybridDictionary_t1428, ___list_2), 0 } ,
	{ 22, 2991, offsetof(DictionaryNode_t1429, ___key_0), 0 } ,
	{ 23, 2991, offsetof(DictionaryNode_t1429, ___value_1), 0 } ,
	{ 24, 2992, offsetof(DictionaryNode_t1429, ___next_2), 0 } ,
	{ 25, 2989, offsetof(DictionaryNodeEnumerator_t1430, ___dict_0), 0 } ,
	{ 26, 76, offsetof(DictionaryNodeEnumerator_t1430, ___isAtStart_1), 0 } ,
	{ 4, 2994, offsetof(DictionaryNodeEnumerator_t1430, ___current_2), 0 } ,
	{ 2, 101, offsetof(DictionaryNodeEnumerator_t1430, ___version_3), 0 } ,
	{ 6, 101, offsetof(ListDictionary_t1427, ___count_0), 0 } ,
	{ 2, 101, offsetof(ListDictionary_t1427, ___version_1), 0 } ,
	{ 27, 2994, offsetof(ListDictionary_t1427, ___head_2), 0 } ,
	{ 28, 2997, offsetof(ListDictionary_t1427, ___comparer_3), 0 } ,
	{ 22, 1267, offsetof(_Item_t1432, ___key_0), 0 } ,
	{ 23, 2991, offsetof(_Item_t1432, ___value_1), 0 } ,
	{ 29, 3001, offsetof(_KeysEnumerator_t1434, ___m_collection_0), 0 } ,
	{ 30, 101, offsetof(_KeysEnumerator_t1434, ___m_position_1), 0 } ,
	{ 29, 3001, offsetof(KeysCollection_t1435, ___m_collection_0), 0 } ,
	{ 31, 2988, offsetof(NameObjectCollectionBase_t1433, ___m_ItemsContainer_0), 0 } ,
	{ 32, 3004, offsetof(NameObjectCollectionBase_t1433, ___m_NullKeyItem_1), 0 } ,
	{ 33, 3005, offsetof(NameObjectCollectionBase_t1433, ___m_ItemsArray_2), 0 } ,
	{ 34, 3006, offsetof(NameObjectCollectionBase_t1433, ___m_hashprovider_3), 0 } ,
	{ 35, 2997, offsetof(NameObjectCollectionBase_t1433, ___m_comparer_4), 0 } ,
	{ 36, 101, offsetof(NameObjectCollectionBase_t1433, ___m_defCapacity_5), 0 } ,
	{ 37, 76, offsetof(NameObjectCollectionBase_t1433, ___m_readonly_6), 0 } ,
	{ 38, 2713, offsetof(NameObjectCollectionBase_t1433, ___infoCopy_7), 0 } ,
	{ 39, 3007, offsetof(NameObjectCollectionBase_t1433, ___keyscoll_8), 0 } ,
	{ 40, 3008, offsetof(NameObjectCollectionBase_t1433, ___equality_comparer_9), 0 } ,
	{ 41, 2502, offsetof(NameValueCollection_t1439, ___cachedAllKeys_10), 0 } ,
	{ 42, 2502, offsetof(NameValueCollection_t1439, ___cachedAll_11), 0 } ,
	{ 43, 2647, offsetof(DefaultValueAttribute_t1212, ___DefaultValue_0), 0 } ,
	{ 44, 3013, offsetof(EditorBrowsableAttribute_t1209, ___state_0), 0 } ,
	{ 45, 419, offsetof(EditorBrowsableState_t1440, ___value___1) + sizeof(Object_t), 0 } ,
	{ 46, 3015, 0, 0 } ,
	{ 47, 3015, 0, 0 } ,
	{ 48, 3015, 0, 0 } ,
	{ 49, 3019, offsetof(TypeConverterAttribute_t1442_StaticFields, ___Default_0), 0 } ,
	{ 50, 75, offsetof(TypeConverterAttribute_t1442, ___converter_type_1), 0 } ,
	{ 45, 419, offsetof(AuthenticationLevel_t1443, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3021, 0, 0 } ,
	{ 52, 3021, 0, 0 } ,
	{ 53, 3021, 0, 0 } ,
	{ 45, 419, offsetof(SslPolicyErrors_t1444, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3024, 0, 0 } ,
	{ 54, 3024, 0, 0 } ,
	{ 55, 3024, 0, 0 } ,
	{ 56, 3024, 0, 0 } ,
	{ 45, 419, offsetof(AddressFamily_t1445, ___value___1) + sizeof(Object_t), 0 } ,
	{ 57, 3026, 0, 0 } ,
	{ 58, 3026, 0, 0 } ,
	{ 59, 3026, 0, 0 } ,
	{ 60, 3026, 0, 0 } ,
	{ 61, 3026, 0, 0 } ,
	{ 62, 3026, 0, 0 } ,
	{ 63, 3026, 0, 0 } ,
	{ 64, 3026, 0, 0 } ,
	{ 65, 3026, 0, 0 } ,
	{ 66, 3026, 0, 0 } ,
	{ 67, 3026, 0, 0 } ,
	{ 68, 3026, 0, 0 } ,
	{ 69, 3026, 0, 0 } ,
	{ 70, 3026, 0, 0 } ,
	{ 71, 3026, 0, 0 } ,
	{ 72, 3026, 0, 0 } ,
	{ 73, 3026, 0, 0 } ,
	{ 74, 3026, 0, 0 } ,
	{ 75, 3026, 0, 0 } ,
	{ 76, 3026, 0, 0 } ,
	{ 77, 3026, 0, 0 } ,
	{ 78, 3026, 0, 0 } ,
	{ 79, 3026, 0, 0 } ,
	{ 80, 3026, 0, 0 } ,
	{ 81, 3026, 0, 0 } ,
	{ 82, 3026, 0, 0 } ,
	{ 83, 3026, 0, 0 } ,
	{ 84, 3026, 0, 0 } ,
	{ 85, 3026, 0, 0 } ,
	{ 86, 3026, 0, 0 } ,
	{ 87, 3026, 0, 0 } ,
	{ 88, 2381, offsetof(FileWebRequest_t1449, ___uri_6), 0 } ,
	{ 89, 3031, offsetof(FileWebRequest_t1449, ___webHeaders_7), 0 } ,
	{ 90, 75, offsetof(FileWebRequest_t1449, ___connectionGroup_8), 0 } ,
	{ 91, 2497, offsetof(FileWebRequest_t1449, ___contentLength_9), 0 } ,
	{ 92, 3032, offsetof(FileWebRequest_t1449, ___fileAccess_10), 0 } ,
	{ 93, 75, offsetof(FileWebRequest_t1449, ___method_11), 0 } ,
	{ 94, 3033, offsetof(FileWebRequest_t1449, ___proxy_12), 0 } ,
	{ 95, 76, offsetof(FileWebRequest_t1449, ___preAuthenticate_13), 0 } ,
	{ 96, 101, offsetof(FileWebRequest_t1449, ___timeout_14), 0 } ,
	{ 97, 2381, offsetof(FtpWebRequest_t1454, ___requestUri_6), 0 } ,
	{ 94, 3033, offsetof(FtpWebRequest_t1454, ___proxy_7), 0 } ,
	{ 96, 101, offsetof(FtpWebRequest_t1454, ___timeout_8), 0 } ,
	{ 98, 101, offsetof(FtpWebRequest_t1454, ___rwTimeout_9), 0 } ,
	{ 99, 76, offsetof(FtpWebRequest_t1454, ___binary_10), 0 } ,
	{ 100, 76, offsetof(FtpWebRequest_t1454, ___usePassive_11), 0 } ,
	{ 93, 75, offsetof(FtpWebRequest_t1454, ___method_12), 0 } ,
	{ 101, 2647, offsetof(FtpWebRequest_t1454, ___locker_13), 0 } ,
	{ 102, 2404, offsetof(FtpWebRequest_t1454_StaticFields, ___supportedCommands_14), 0 } ,
	{ 103, 3040, offsetof(FtpWebRequest_t1454, ___callback_15), 0 } ,
	{ 104, 3041, offsetof(FtpWebRequest_t1454_StaticFields, ___U3CU3Ef__amU24cache1C_16), 19 } ,
	{ 105, 3047, offsetof(HttpVersion_t1458_StaticFields, ___Version10_0), 0 } ,
	{ 106, 3047, offsetof(HttpVersion_t1458_StaticFields, ___Version11_1), 0 } ,
	{ 97, 2381, offsetof(HttpWebRequest_t1461, ___requestUri_6), 0 } ,
	{ 107, 2381, offsetof(HttpWebRequest_t1461, ___actualUri_7), 0 } ,
	{ 108, 76, offsetof(HttpWebRequest_t1461, ___hostChanged_8), 0 } ,
	{ 109, 76, offsetof(HttpWebRequest_t1461, ___allowAutoRedirect_9), 0 } ,
	{ 110, 76, offsetof(HttpWebRequest_t1461, ___allowBuffering_10), 0 } ,
	{ 111, 3049, offsetof(HttpWebRequest_t1461, ___certificates_11), 0 } ,
	{ 90, 75, offsetof(HttpWebRequest_t1461, ___connectionGroup_12), 0 } ,
	{ 91, 2497, offsetof(HttpWebRequest_t1461, ___contentLength_13), 0 } ,
	{ 89, 3031, offsetof(HttpWebRequest_t1461, ___webHeaders_14), 0 } ,
	{ 112, 76, offsetof(HttpWebRequest_t1461, ___keepAlive_15), 0 } ,
	{ 113, 101, offsetof(HttpWebRequest_t1461, ___maxAutoRedirect_16), 0 } ,
	{ 114, 75, offsetof(HttpWebRequest_t1461, ___mediaType_17), 0 } ,
	{ 93, 75, offsetof(HttpWebRequest_t1461, ___method_18), 0 } ,
	{ 115, 75, offsetof(HttpWebRequest_t1461, ___initialMethod_19), 0 } ,
	{ 116, 76, offsetof(HttpWebRequest_t1461, ___pipelined_20), 0 } ,
	{ 2, 3050, offsetof(HttpWebRequest_t1461, ___version_21), 0 } ,
	{ 94, 3033, offsetof(HttpWebRequest_t1461, ___proxy_22), 0 } ,
	{ 117, 76, offsetof(HttpWebRequest_t1461, ___sendChunked_23), 0 } ,
	{ 118, 3051, offsetof(HttpWebRequest_t1461, ___servicePoint_24), 0 } ,
	{ 96, 101, offsetof(HttpWebRequest_t1461, ___timeout_25), 0 } ,
	{ 119, 101, offsetof(HttpWebRequest_t1461, ___redirects_26), 0 } ,
	{ 101, 2647, offsetof(HttpWebRequest_t1461, ___locker_27), 0 } ,
	{ 120, 1234, offsetof(HttpWebRequest_t1461_StaticFields, ___defaultMaxResponseHeadersLength_28), 0 } ,
	{ 121, 101, offsetof(HttpWebRequest_t1461, ___readWriteTimeout_29), 0 } ,
	{ 122, 2497, offsetof(IPAddress_t1463, ___m_Address_0), 0 } ,
	{ 123, 3057, offsetof(IPAddress_t1463, ___m_Family_1), 0 } ,
	{ 124, 3058, offsetof(IPAddress_t1463, ___m_Numbers_2), 0 } ,
	{ 125, 2497, offsetof(IPAddress_t1463, ___m_ScopeId_3), 0 } ,
	{ 126, 3059, offsetof(IPAddress_t1463_StaticFields, ___Any_4), 0 } ,
	{ 127, 3059, offsetof(IPAddress_t1463_StaticFields, ___Broadcast_5), 0 } ,
	{ 128, 3059, offsetof(IPAddress_t1463_StaticFields, ___Loopback_6), 0 } ,
	{ 51, 3059, offsetof(IPAddress_t1463_StaticFields, ___None_7), 0 } ,
	{ 129, 3059, offsetof(IPAddress_t1463_StaticFields, ___IPv6Any_8), 0 } ,
	{ 130, 3059, offsetof(IPAddress_t1463_StaticFields, ___IPv6Loopback_9), 0 } ,
	{ 131, 3059, offsetof(IPAddress_t1463_StaticFields, ___IPv6None_10), 0 } ,
	{ 132, 3058, offsetof(IPv6Address_t1464, ___address_0), 0 } ,
	{ 133, 101, offsetof(IPv6Address_t1464, ___prefixLength_1), 0 } ,
	{ 134, 2497, offsetof(IPv6Address_t1464, ___scopeId_2), 0 } ,
	{ 128, 3062, offsetof(IPv6Address_t1464_StaticFields, ___Loopback_3), 0 } ,
	{ 58, 3062, offsetof(IPv6Address_t1464_StaticFields, ___Unspecified_4), 0 } ,
	{ 45, 419, offsetof(SecurityProtocolType_t1465, ___value___1) + sizeof(Object_t), 0 } ,
	{ 135, 3066, 0, 0 } ,
	{ 136, 3066, 0, 0 } ,
	{ 88, 2381, offsetof(ServicePoint_t1460, ___uri_0), 0 } ,
	{ 137, 101, offsetof(ServicePoint_t1460, ___connectionLimit_1), 0 } ,
	{ 138, 101, offsetof(ServicePoint_t1460, ___maxIdleTime_2), 0 } ,
	{ 139, 101, offsetof(ServicePoint_t1460, ___currentConnections_3), 0 } ,
	{ 140, 1419, offsetof(ServicePoint_t1460, ___idleSince_4), 0 } ,
	{ 141, 76, offsetof(ServicePoint_t1460, ___usesProxy_5), 0 } ,
	{ 142, 76, offsetof(ServicePoint_t1460, ___sendContinue_6), 0 } ,
	{ 143, 76, offsetof(ServicePoint_t1460, ___useConnect_7), 0 } ,
	{ 101, 2647, offsetof(ServicePoint_t1460, ___locker_8), 0 } ,
	{ 144, 2647, offsetof(ServicePoint_t1460, ___hostE_9), 0 } ,
	{ 145, 76, offsetof(ServicePoint_t1460, ___useNagle_10), 0 } ,
	{ 88, 2381, offsetof(SPKey_t1466, ___uri_0), 0 } ,
	{ 146, 76, offsetof(SPKey_t1466, ___use_connect_1), 0 } ,
	{ 147, 3071, offsetof(ServicePointManager_t1468_StaticFields, ___servicePoints_0), 0 } ,
	{ 148, 3072, offsetof(ServicePointManager_t1468_StaticFields, ___policy_1), 0 } ,
	{ 149, 1234, offsetof(ServicePointManager_t1468_StaticFields, ___defaultConnectionLimit_2), 0 } ,
	{ 150, 1234, offsetof(ServicePointManager_t1468_StaticFields, ___maxServicePointIdleTime_3), 0 } ,
	{ 151, 1234, offsetof(ServicePointManager_t1468_StaticFields, ___maxServicePoints_4), 0 } ,
	{ 152, 91, offsetof(ServicePointManager_t1468_StaticFields, ____checkCRL_5), 0 } ,
	{ 153, 3073, offsetof(ServicePointManager_t1468_StaticFields, ____securityProtocol_6), 0 } ,
	{ 154, 91, offsetof(ServicePointManager_t1468_StaticFields, ___expectContinue_7), 0 } ,
	{ 145, 91, offsetof(ServicePointManager_t1468_StaticFields, ___useNagle_8), 0 } ,
	{ 155, 3041, offsetof(ServicePointManager_t1468_StaticFields, ___server_cert_cb_9), 0 } ,
	{ 156, 3075, offsetof(WebHeaderCollection_t1447_StaticFields, ___restricted_12), 0 } ,
	{ 157, 3075, offsetof(WebHeaderCollection_t1447_StaticFields, ___multiValue_13), 0 } ,
	{ 158, 3076, offsetof(WebHeaderCollection_t1447_StaticFields, ___restricted_response_14), 0 } ,
	{ 159, 76, offsetof(WebHeaderCollection_t1447, ___internallyCreated_15), 0 } ,
	{ 160, 3077, offsetof(WebHeaderCollection_t1447_StaticFields, ___allowed_chars_16), 0 } ,
	{ 132, 2381, offsetof(WebProxy_t1472, ___address_0), 0 } ,
	{ 161, 76, offsetof(WebProxy_t1472, ___bypassOnLocal_1), 0 } ,
	{ 162, 3005, offsetof(WebProxy_t1472, ___bypassList_2), 0 } ,
	{ 163, 3079, offsetof(WebProxy_t1472, ___credentials_3), 0 } ,
	{ 164, 76, offsetof(WebProxy_t1472, ___useDefaultCredentials_4), 0 } ,
	{ 165, 3071, offsetof(WebRequest_t1450_StaticFields, ___prefixes_1), 0 } ,
	{ 166, 91, offsetof(WebRequest_t1450_StaticFields, ___isDefaultWebProxySet_2), 0 } ,
	{ 167, 3082, offsetof(WebRequest_t1450_StaticFields, ___defaultWebProxy_3), 0 } ,
	{ 168, 3083, offsetof(WebRequest_t1450, ___authentication_level_4), 0 } ,
	{ 169, 3084, offsetof(WebRequest_t1450_StaticFields, ___lockobj_5), 0 } ,
	{ 45, 419, offsetof(OpenFlags_t1474, ___value___1) + sizeof(Object_t), 0 } ,
	{ 170, 3087, 0, 0 } ,
	{ 171, 3087, 0, 0 } ,
	{ 172, 3087, 0, 0 } ,
	{ 173, 3087, 0, 0 } ,
	{ 174, 3087, 0, 0 } ,
	{ 175, 3091, offsetof(PublicKey_t1478, ____key_0), 0 } ,
	{ 176, 3092, offsetof(PublicKey_t1478, ____keyValue_1), 0 } ,
	{ 177, 3092, offsetof(PublicKey_t1478, ____params_2), 0 } ,
	{ 178, 3093, offsetof(PublicKey_t1478, ____oid_3), 0 } ,
	{ 179, 2065, offsetof(PublicKey_t1478_StaticFields, ___U3CU3Ef__switchU24map9_4), 31 } ,
	{ 45, 419, offsetof(StoreLocation_t1479, ___value___1) + sizeof(Object_t), 0 } ,
	{ 180, 3095, 0, 0 } ,
	{ 181, 3095, 0, 0 } ,
	{ 45, 419, offsetof(StoreName_t1480, ___value___1) + sizeof(Object_t), 0 } ,
	{ 182, 3098, 0, 0 } ,
	{ 183, 3098, 0, 0 } ,
	{ 184, 3098, 0, 0 } ,
	{ 185, 3098, 0, 0 } ,
	{ 186, 3098, 0, 0 } ,
	{ 187, 3098, 0, 0 } ,
	{ 188, 3098, 0, 0 } ,
	{ 189, 3098, 0, 0 } ,
	{ 190, 75, offsetof(X500DistinguishedName_t1481, ___name_3), 0 } ,
	{ 45, 419, offsetof(X500DistinguishedNameFlags_t1482, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3102, 0, 0 } ,
	{ 191, 3102, 0, 0 } ,
	{ 192, 3102, 0, 0 } ,
	{ 193, 3102, 0, 0 } ,
	{ 194, 3102, 0, 0 } ,
	{ 195, 3102, 0, 0 } ,
	{ 196, 3102, 0, 0 } ,
	{ 197, 3102, 0, 0 } ,
	{ 198, 3102, 0, 0 } ,
	{ 199, 3102, 0, 0 } ,
	{ 200, 3105, 0, 0 } ,
	{ 201, 3105, 0, 0 } ,
	{ 202, 76, offsetof(X509BasicConstraintsExtension_t1483, ____certificateAuthority_6), 0 } ,
	{ 203, 76, offsetof(X509BasicConstraintsExtension_t1483, ____hasPathLengthConstraint_7), 0 } ,
	{ 204, 101, offsetof(X509BasicConstraintsExtension_t1483, ____pathLengthConstraint_8), 0 } ,
	{ 205, 3106, offsetof(X509BasicConstraintsExtension_t1483, ____status_9), 0 } ,
	{ 206, 76, offsetof(X509Certificate2_t1487, ____archived_5), 0 } ,
	{ 207, 3110, offsetof(X509Certificate2_t1487, ____extensions_6), 0 } ,
	{ 208, 75, offsetof(X509Certificate2_t1487, ____name_7), 0 } ,
	{ 209, 75, offsetof(X509Certificate2_t1487, ____serial_8), 0 } ,
	{ 210, 3111, offsetof(X509Certificate2_t1487, ____publicKey_9), 0 } ,
	{ 211, 3112, offsetof(X509Certificate2_t1487, ___issuer_name_10), 0 } ,
	{ 212, 3112, offsetof(X509Certificate2_t1487, ___subject_name_11), 0 } ,
	{ 213, 3093, offsetof(X509Certificate2_t1487, ___signature_algorithm_12), 0 } ,
	{ 214, 3113, offsetof(X509Certificate2_t1487, ____cert_13), 0 } ,
	{ 215, 90, offsetof(X509Certificate2_t1487_StaticFields, ___empty_error_14), 0 } ,
	{ 216, 2124, offsetof(X509Certificate2_t1487_StaticFields, ___commonName_15), 0 } ,
	{ 217, 2124, offsetof(X509Certificate2_t1487_StaticFields, ___email_16), 0 } ,
	{ 218, 2124, offsetof(X509Certificate2_t1487_StaticFields, ___signedData_17), 0 } ,
	{ 219, 3116, offsetof(X509Certificate2Enumerator_t1490, ___enumerator_0), 0 } ,
	{ 219, 3116, offsetof(X509CertificateEnumerator_t1491, ___enumerator_0), 0 } ,
	{ 220, 3123, offsetof(X509Chain_t1499, ___location_0), 0 } ,
	{ 221, 3124, offsetof(X509Chain_t1499, ___elements_1), 0 } ,
	{ 148, 3125, offsetof(X509Chain_t1499, ___policy_2), 0 } ,
	{ 222, 3126, offsetof(X509Chain_t1499, ___status_3), 0 } ,
	{ 223, 3127, offsetof(X509Chain_t1499_StaticFields, ___Empty_4), 0 } ,
	{ 224, 101, offsetof(X509Chain_t1499, ___max_path_length_5), 0 } ,
	{ 225, 3112, offsetof(X509Chain_t1499, ___working_issuer_name_6), 0 } ,
	{ 226, 3091, offsetof(X509Chain_t1499, ___working_public_key_7), 0 } ,
	{ 227, 3128, offsetof(X509Chain_t1499, ___bce_restriction_8), 0 } ,
	{ 228, 3129, offsetof(X509Chain_t1499, ___roots_9), 0 } ,
	{ 229, 3129, offsetof(X509Chain_t1499, ___cas_10), 0 } ,
	{ 230, 3130, offsetof(X509Chain_t1499, ___collection_11), 0 } ,
	{ 231, 2065, offsetof(X509Chain_t1499_StaticFields, ___U3CU3Ef__switchU24mapB_12), 41 } ,
	{ 232, 2065, offsetof(X509Chain_t1499_StaticFields, ___U3CU3Ef__switchU24mapC_13), 42 } ,
	{ 233, 2065, offsetof(X509Chain_t1499_StaticFields, ___U3CU3Ef__switchU24mapD_14), 43 } ,
	{ 234, 3132, offsetof(X509ChainElement_t1497, ___certificate_0), 0 } ,
	{ 222, 3126, offsetof(X509ChainElement_t1497, ___status_1), 0 } ,
	{ 235, 75, offsetof(X509ChainElement_t1497, ___info_2), 0 } ,
	{ 236, 3133, offsetof(X509ChainElement_t1497, ___compressed_status_flags_3), 0 } ,
	{ 237, 3005, offsetof(X509ChainElementCollection_t1493, ____list_0), 0 } ,
	{ 219, 3116, offsetof(X509ChainElementEnumerator_t1500, ___enumerator_0), 0 } ,
	{ 238, 3140, offsetof(X509ChainPolicy_t1494, ___apps_0), 0 } ,
	{ 239, 3140, offsetof(X509ChainPolicy_t1494, ___cert_1), 0 } ,
	{ 240, 3130, offsetof(X509ChainPolicy_t1494, ___store_2), 0 } ,
	{ 241, 3141, offsetof(X509ChainPolicy_t1494, ___rflag_3), 0 } ,
	{ 242, 3142, offsetof(X509ChainPolicy_t1494, ___mode_4), 0 } ,
	{ 96, 3143, offsetof(X509ChainPolicy_t1494, ___timeout_5), 0 } ,
	{ 243, 3144, offsetof(X509ChainPolicy_t1494, ___vflags_6), 0 } ,
	{ 244, 1419, offsetof(X509ChainPolicy_t1494, ___vtime_7), 0 } ,
	{ 222, 3133, offsetof(X509ChainStatus_t1496, ___status_0) + sizeof(Object_t), 0 } ,
	{ 235, 75, offsetof(X509ChainStatus_t1496, ___info_1) + sizeof(Object_t), 0 } ,
	{ 45, 419, offsetof(X509ChainStatusFlags_t1502, ___value___1) + sizeof(Object_t), 0 } ,
	{ 245, 3147, 0, 0 } ,
	{ 246, 3147, 0, 0 } ,
	{ 247, 3147, 0, 0 } ,
	{ 248, 3147, 0, 0 } ,
	{ 249, 3147, 0, 0 } ,
	{ 250, 3147, 0, 0 } ,
	{ 251, 3147, 0, 0 } ,
	{ 252, 3147, 0, 0 } ,
	{ 253, 3147, 0, 0 } ,
	{ 254, 3147, 0, 0 } ,
	{ 255, 3147, 0, 0 } ,
	{ 256, 3147, 0, 0 } ,
	{ 257, 3147, 0, 0 } ,
	{ 258, 3147, 0, 0 } ,
	{ 259, 3147, 0, 0 } ,
	{ 260, 3147, 0, 0 } ,
	{ 261, 3147, 0, 0 } ,
	{ 262, 3147, 0, 0 } ,
	{ 263, 3147, 0, 0 } ,
	{ 264, 3147, 0, 0 } ,
	{ 265, 3147, 0, 0 } ,
	{ 266, 3147, 0, 0 } ,
	{ 267, 3147, 0, 0 } ,
	{ 268, 3140, offsetof(X509EnhancedKeyUsageExtension_t1503, ____enhKeyUsage_4), 0 } ,
	{ 205, 3106, offsetof(X509EnhancedKeyUsageExtension_t1503, ____status_5), 0 } ,
	{ 269, 2065, offsetof(X509EnhancedKeyUsageExtension_t1503_StaticFields, ___U3CU3Ef__switchU24mapE_6), 47 } ,
	{ 270, 76, offsetof(X509Extension_t1484, ____critical_3), 0 } ,
	{ 237, 3005, offsetof(X509ExtensionCollection_t1485, ____list_0), 0 } ,
	{ 219, 3116, offsetof(X509ExtensionEnumerator_t1504, ___enumerator_0), 0 } ,
	{ 45, 419, offsetof(X509FindType_t1505, ___value___1) + sizeof(Object_t), 0 } ,
	{ 271, 3153, 0, 0 } ,
	{ 272, 3153, 0, 0 } ,
	{ 273, 3153, 0, 0 } ,
	{ 274, 3153, 0, 0 } ,
	{ 275, 3153, 0, 0 } ,
	{ 276, 3153, 0, 0 } ,
	{ 277, 3153, 0, 0 } ,
	{ 278, 3153, 0, 0 } ,
	{ 279, 3153, 0, 0 } ,
	{ 280, 3153, 0, 0 } ,
	{ 281, 3153, 0, 0 } ,
	{ 282, 3153, 0, 0 } ,
	{ 283, 3153, 0, 0 } ,
	{ 284, 3153, 0, 0 } ,
	{ 285, 3153, 0, 0 } ,
	{ 200, 3105, 0, 0 } ,
	{ 201, 3105, 0, 0 } ,
	{ 286, 3156, 0, 0 } ,
	{ 287, 3157, offsetof(X509KeyUsageExtension_t1506, ____keyUsages_7), 0 } ,
	{ 205, 3106, offsetof(X509KeyUsageExtension_t1506, ____status_8), 0 } ,
	{ 45, 419, offsetof(X509KeyUsageFlags_t1507, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3159, 0, 0 } ,
	{ 288, 3159, 0, 0 } ,
	{ 289, 3159, 0, 0 } ,
	{ 290, 3159, 0, 0 } ,
	{ 291, 3159, 0, 0 } ,
	{ 292, 3159, 0, 0 } ,
	{ 293, 3159, 0, 0 } ,
	{ 294, 3159, 0, 0 } ,
	{ 295, 3159, 0, 0 } ,
	{ 296, 3159, 0, 0 } ,
	{ 45, 419, offsetof(X509NameType_t1508, ___value___1) + sizeof(Object_t), 0 } ,
	{ 297, 3161, 0, 0 } ,
	{ 298, 3161, 0, 0 } ,
	{ 299, 3161, 0, 0 } ,
	{ 300, 3161, 0, 0 } ,
	{ 301, 3161, 0, 0 } ,
	{ 302, 3161, 0, 0 } ,
	{ 45, 419, offsetof(X509RevocationFlag_t1509, ___value___1) + sizeof(Object_t), 0 } ,
	{ 303, 3163, 0, 0 } ,
	{ 304, 3163, 0, 0 } ,
	{ 305, 3163, 0, 0 } ,
	{ 45, 419, offsetof(X509RevocationMode_t1510, ___value___1) + sizeof(Object_t), 0 } ,
	{ 306, 3165, 0, 0 } ,
	{ 307, 3165, 0, 0 } ,
	{ 308, 3165, 0, 0 } ,
	{ 208, 75, offsetof(X509Store_t1498, ____name_0), 0 } ,
	{ 309, 3123, offsetof(X509Store_t1498, ____location_1), 0 } ,
	{ 3, 3130, offsetof(X509Store_t1498, ___list_2), 0 } ,
	{ 310, 3169, offsetof(X509Store_t1498, ____flags_3), 0 } ,
	{ 240, 3170, offsetof(X509Store_t1498, ___store_4), 0 } ,
	{ 311, 2065, offsetof(X509Store_t1498_StaticFields, ___U3CU3Ef__switchU24mapF_5), 50 } ,
	{ 200, 3105, 0, 0 } ,
	{ 201, 3105, 0, 0 } ,
	{ 312, 1385, offsetof(X509SubjectKeyIdentifierExtension_t1512, ____subjectKeyIdentifier_6), 0 } ,
	{ 313, 75, offsetof(X509SubjectKeyIdentifierExtension_t1512, ____ski_7), 0 } ,
	{ 205, 3106, offsetof(X509SubjectKeyIdentifierExtension_t1512, ____status_8), 0 } ,
	{ 45, 419, offsetof(X509SubjectKeyIdentifierHashAlgorithm_t1513, ___value___1) + sizeof(Object_t), 0 } ,
	{ 314, 3174, 0, 0 } ,
	{ 315, 3174, 0, 0 } ,
	{ 316, 3174, 0, 0 } ,
	{ 45, 419, offsetof(X509VerificationFlags_t1514, ___value___1) + sizeof(Object_t), 0 } ,
	{ 317, 3176, 0, 0 } ,
	{ 318, 3176, 0, 0 } ,
	{ 319, 3176, 0, 0 } ,
	{ 320, 3176, 0, 0 } ,
	{ 321, 3176, 0, 0 } ,
	{ 322, 3176, 0, 0 } ,
	{ 323, 3176, 0, 0 } ,
	{ 324, 3176, 0, 0 } ,
	{ 325, 3176, 0, 0 } ,
	{ 326, 3176, 0, 0 } ,
	{ 327, 3176, 0, 0 } ,
	{ 328, 3176, 0, 0 } ,
	{ 329, 3176, 0, 0 } ,
	{ 330, 3176, 0, 0 } ,
	{ 45, 419, offsetof(AsnDecodeStatus_t1515, ___value___1) + sizeof(Object_t), 0 } ,
	{ 331, 3178, 0, 0 } ,
	{ 332, 3178, 0, 0 } ,
	{ 333, 3178, 0, 0 } ,
	{ 334, 3178, 0, 0 } ,
	{ 335, 3178, 0, 0 } ,
	{ 336, 3178, 0, 0 } ,
	{ 178, 3180, offsetof(AsnEncodedData_t1476, ____oid_0), 0 } ,
	{ 337, 3181, offsetof(AsnEncodedData_t1476, ____raw_1), 0 } ,
	{ 338, 2065, offsetof(AsnEncodedData_t1476_StaticFields, ___U3CU3Ef__switchU24mapA_2), 52 } ,
	{ 339, 75, offsetof(Oid_t1477, ____value_0), 0 } ,
	{ 208, 75, offsetof(Oid_t1477, ____name_1), 0 } ,
	{ 340, 2065, offsetof(Oid_t1477_StaticFields, ___U3CU3Ef__switchU24map10_2), 53 } ,
	{ 237, 3005, offsetof(OidCollection_t1501, ____list_0), 0 } ,
	{ 341, 76, offsetof(OidCollection_t1501, ____readOnly_1), 0 } ,
	{ 342, 3140, offsetof(OidEnumerator_t1516, ____collection_0), 0 } ,
	{ 343, 101, offsetof(OidEnumerator_t1516, ____position_1), 0 } ,
	{ 344, 728, offsetof(BaseMachine_t1519, ___needs_groups_or_captures_0), 0 } ,
	{ 5, 585, offsetof(Capture_t1520, ___index_0), 0 } ,
	{ 345, 585, offsetof(Capture_t1520, ___length_1), 0 } ,
	{ 346, 1903, offsetof(Capture_t1520, ___text_2), 0 } ,
	{ 3, 3190, offsetof(CaptureCollection_t1522, ___list_0), 0 } ,
	{ 347, 3192, offsetof(Group_t1523_StaticFields, ___Fail_3), 0 } ,
	{ 348, 76, offsetof(Group_t1523, ___success_4), 0 } ,
	{ 349, 3193, offsetof(Group_t1523, ___captures_5), 0 } ,
	{ 3, 3195, offsetof(GroupCollection_t1525, ___list_0), 0 } ,
	{ 350, 101, offsetof(GroupCollection_t1525, ___gap_1), 0 } ,
	{ 351, 3197, offsetof(Match_t1517, ___regex_6), 0 } ,
	{ 352, 3198, offsetof(Match_t1517, ___machine_7), 0 } ,
	{ 353, 101, offsetof(Match_t1517, ___text_length_8), 0 } ,
	{ 354, 3199, offsetof(Match_t1517, ___groups_9), 0 } ,
	{ 355, 3200, offsetof(Match_t1517_StaticFields, ___empty_10), 0 } ,
	{ 5, 101, offsetof(Enumerator_t1528, ___index_0), 0 } ,
	{ 356, 3202, offsetof(Enumerator_t1528, ___coll_1), 0 } ,
	{ 4, 3204, offsetof(MatchCollection_t1527, ___current_0), 0 } ,
	{ 3, 3005, offsetof(MatchCollection_t1527, ___list_1), 0 } ,
	{ 357, 3206, offsetof(Regex_t792_StaticFields, ___cache_0), 0 } ,
	{ 358, 3207, offsetof(Regex_t792, ___machineFactory_1), 0 } ,
	{ 359, 3208, offsetof(Regex_t792, ___mapping_2), 0 } ,
	{ 360, 101, offsetof(Regex_t792, ___group_count_3), 0 } ,
	{ 350, 101, offsetof(Regex_t792, ___gap_4), 0 } ,
	{ 361, 76, offsetof(Regex_t792, ___refsInitialized_5), 0 } ,
	{ 362, 2502, offsetof(Regex_t792, ___group_names_6), 0 } ,
	{ 363, 1493, offsetof(Regex_t792, ___group_numbers_7), 0 } ,
	{ 364, 3209, offsetof(Regex_t792, ___pattern_8), 0 } ,
	{ 365, 3210, offsetof(Regex_t792, ___roptions_9), 0 } ,
	{ 366, 3211, offsetof(Regex_t792, ___capnames_10), 58 } ,
	{ 367, 3212, offsetof(Regex_t792, ___caps_11), 59 } ,
	{ 368, 3213, offsetof(Regex_t792, ___capsize_12), 60 } ,
	{ 369, 3214, offsetof(Regex_t792, ___capslist_13), 61 } ,
	{ 45, 419, offsetof(RegexOptions_t1533, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3216, 0, 0 } ,
	{ 370, 3216, 0, 0 } ,
	{ 371, 3216, 0, 0 } ,
	{ 372, 3216, 0, 0 } ,
	{ 373, 3216, 0, 0 } ,
	{ 374, 3216, 0, 0 } ,
	{ 375, 3216, 0, 0 } ,
	{ 376, 3216, 0, 0 } ,
	{ 377, 3216, 0, 0 } ,
	{ 45, 2353, offsetof(OpCode_t1534, ___value___1) + sizeof(Object_t), 0 } ,
	{ 378, 3218, 0, 0 } ,
	{ 379, 3218, 0, 0 } ,
	{ 380, 3218, 0, 0 } ,
	{ 381, 3218, 0, 0 } ,
	{ 382, 3218, 0, 0 } ,
	{ 383, 3218, 0, 0 } ,
	{ 384, 3218, 0, 0 } ,
	{ 385, 3218, 0, 0 } ,
	{ 386, 3218, 0, 0 } ,
	{ 387, 3218, 0, 0 } ,
	{ 388, 3218, 0, 0 } ,
	{ 389, 3218, 0, 0 } ,
	{ 390, 3218, 0, 0 } ,
	{ 391, 3218, 0, 0 } ,
	{ 392, 3218, 0, 0 } ,
	{ 393, 3218, 0, 0 } ,
	{ 394, 3218, 0, 0 } ,
	{ 395, 3218, 0, 0 } ,
	{ 396, 3218, 0, 0 } ,
	{ 397, 3218, 0, 0 } ,
	{ 398, 3218, 0, 0 } ,
	{ 399, 3218, 0, 0 } ,
	{ 400, 3218, 0, 0 } ,
	{ 401, 3218, 0, 0 } ,
	{ 402, 3218, 0, 0 } ,
	{ 45, 2353, offsetof(OpFlags_t1535, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3221, 0, 0 } ,
	{ 403, 3221, 0, 0 } ,
	{ 370, 3221, 0, 0 } ,
	{ 375, 3221, 0, 0 } ,
	{ 404, 3221, 0, 0 } ,
	{ 45, 2353, offsetof(Position_t1536, ___value___1) + sizeof(Object_t), 0 } ,
	{ 126, 3224, 0, 0 } ,
	{ 405, 3224, 0, 0 } ,
	{ 406, 3224, 0, 0 } ,
	{ 407, 3224, 0, 0 } ,
	{ 408, 3224, 0, 0 } ,
	{ 409, 3224, 0, 0 } ,
	{ 410, 3224, 0, 0 } ,
	{ 411, 3224, 0, 0 } ,
	{ 412, 3224, 0, 0 } ,
	{ 413, 3224, 0, 0 } ,
	{ 364, 1267, offsetof(Key_t1537, ___pattern_0), 0 } ,
	{ 414, 3229, offsetof(Key_t1537, ___options_1), 0 } ,
	{ 415, 101, offsetof(FactoryCache_t1529, ___capacity_0), 0 } ,
	{ 416, 2988, offsetof(FactoryCache_t1529, ___factories_1), 0 } ,
	{ 417, 3231, offsetof(FactoryCache_t1529, ___mru_list_2), 0 } ,
	{ 23, 2991, offsetof(Node_t1539, ___value_0), 0 } ,
	{ 418, 3233, offsetof(Node_t1539, ___previous_1), 0 } ,
	{ 24, 3233, offsetof(Node_t1539, ___next_2), 0 } ,
	{ 27, 3235, offsetof(MRUList_t1538, ___head_0), 0 } ,
	{ 419, 3235, offsetof(MRUList_t1538, ___tail_1), 0 } ,
	{ 45, 2353, offsetof(Category_t1540, ___value___1) + sizeof(Object_t), 0 } ,
	{ 51, 3237, 0, 0 } ,
	{ 126, 3237, 0, 0 } ,
	{ 420, 3237, 0, 0 } ,
	{ 421, 3237, 0, 0 } ,
	{ 422, 3237, 0, 0 } ,
	{ 423, 3237, 0, 0 } ,
	{ 424, 3237, 0, 0 } ,
	{ 425, 3237, 0, 0 } ,
	{ 426, 3237, 0, 0 } ,
	{ 427, 3237, 0, 0 } ,
	{ 428, 3237, 0, 0 } ,
	{ 429, 3237, 0, 0 } ,
	{ 430, 3237, 0, 0 } ,
	{ 431, 3237, 0, 0 } ,
	{ 432, 3237, 0, 0 } ,
	{ 433, 3237, 0, 0 } ,
	{ 434, 3237, 0, 0 } ,
	{ 435, 3237, 0, 0 } ,
	{ 436, 3237, 0, 0 } ,
	{ 437, 3237, 0, 0 } ,
	{ 438, 3237, 0, 0 } ,
	{ 439, 3237, 0, 0 } ,
	{ 440, 3237, 0, 0 } ,
	{ 441, 3237, 0, 0 } ,
	{ 442, 3237, 0, 0 } ,
	{ 443, 3237, 0, 0 } ,
	{ 444, 3237, 0, 0 } ,
	{ 445, 3237, 0, 0 } ,
	{ 446, 3237, 0, 0 } ,
	{ 447, 3237, 0, 0 } ,
	{ 448, 3237, 0, 0 } ,
	{ 449, 3237, 0, 0 } ,
	{ 450, 3237, 0, 0 } ,
	{ 451, 3237, 0, 0 } ,
	{ 452, 3237, 0, 0 } ,
	{ 453, 3237, 0, 0 } ,
	{ 454, 3237, 0, 0 } ,
	{ 455, 3237, 0, 0 } ,
	{ 456, 3237, 0, 0 } ,
	{ 457, 3237, 0, 0 } ,
	{ 458, 3237, 0, 0 } ,
	{ 459, 3237, 0, 0 } ,
	{ 460, 3237, 0, 0 } ,
	{ 461, 3237, 0, 0 } ,
	{ 462, 3237, 0, 0 } ,
	{ 463, 3237, 0, 0 } ,
	{ 464, 3237, 0, 0 } ,
	{ 465, 3237, 0, 0 } ,
	{ 466, 3237, 0, 0 } ,
	{ 467, 3237, 0, 0 } ,
	{ 468, 3237, 0, 0 } ,
	{ 469, 3237, 0, 0 } ,
	{ 470, 3237, 0, 0 } ,
	{ 471, 3237, 0, 0 } ,
	{ 472, 3237, 0, 0 } ,
	{ 473, 3237, 0, 0 } ,
	{ 474, 3237, 0, 0 } ,
	{ 475, 3237, 0, 0 } ,
	{ 476, 3237, 0, 0 } ,
	{ 477, 3237, 0, 0 } ,
	{ 478, 3237, 0, 0 } ,
	{ 479, 3237, 0, 0 } ,
	{ 480, 3237, 0, 0 } ,
	{ 481, 3237, 0, 0 } ,
	{ 482, 3237, 0, 0 } ,
	{ 483, 3237, 0, 0 } ,
	{ 484, 3237, 0, 0 } ,
	{ 485, 3237, 0, 0 } ,
	{ 486, 3237, 0, 0 } ,
	{ 487, 3237, 0, 0 } ,
	{ 488, 3237, 0, 0 } ,
	{ 489, 3237, 0, 0 } ,
	{ 490, 3237, 0, 0 } ,
	{ 491, 3237, 0, 0 } ,
	{ 492, 3237, 0, 0 } ,
	{ 493, 3237, 0, 0 } ,
	{ 494, 3237, 0, 0 } ,
	{ 495, 3237, 0, 0 } ,
	{ 496, 3237, 0, 0 } ,
	{ 497, 3237, 0, 0 } ,
	{ 498, 3237, 0, 0 } ,
	{ 499, 3237, 0, 0 } ,
	{ 500, 3237, 0, 0 } ,
	{ 501, 3237, 0, 0 } ,
	{ 502, 3237, 0, 0 } ,
	{ 503, 3237, 0, 0 } ,
	{ 504, 3237, 0, 0 } ,
	{ 505, 3237, 0, 0 } ,
	{ 506, 3237, 0, 0 } ,
	{ 507, 3237, 0, 0 } ,
	{ 508, 3237, 0, 0 } ,
	{ 509, 3237, 0, 0 } ,
	{ 510, 3237, 0, 0 } ,
	{ 511, 3237, 0, 0 } ,
	{ 512, 3237, 0, 0 } ,
	{ 513, 3237, 0, 0 } ,
	{ 514, 3237, 0, 0 } ,
	{ 515, 3237, 0, 0 } ,
	{ 516, 3237, 0, 0 } ,
	{ 517, 3237, 0, 0 } ,
	{ 518, 3237, 0, 0 } ,
	{ 519, 3237, 0, 0 } ,
	{ 520, 3237, 0, 0 } ,
	{ 521, 3237, 0, 0 } ,
	{ 522, 3237, 0, 0 } ,
	{ 523, 3237, 0, 0 } ,
	{ 524, 3237, 0, 0 } ,
	{ 525, 3237, 0, 0 } ,
	{ 526, 3237, 0, 0 } ,
	{ 527, 3237, 0, 0 } ,
	{ 528, 3237, 0, 0 } ,
	{ 529, 3237, 0, 0 } ,
	{ 530, 3237, 0, 0 } ,
	{ 531, 3237, 0, 0 } ,
	{ 532, 3237, 0, 0 } ,
	{ 533, 3237, 0, 0 } ,
	{ 534, 3237, 0, 0 } ,
	{ 535, 3237, 0, 0 } ,
	{ 536, 3237, 0, 0 } ,
	{ 537, 3237, 0, 0 } ,
	{ 538, 3237, 0, 0 } ,
	{ 539, 3237, 0, 0 } ,
	{ 540, 3237, 0, 0 } ,
	{ 541, 3237, 0, 0 } ,
	{ 542, 3237, 0, 0 } ,
	{ 543, 3237, 0, 0 } ,
	{ 544, 3237, 0, 0 } ,
	{ 545, 3237, 0, 0 } ,
	{ 546, 3237, 0, 0 } ,
	{ 547, 3237, 0, 0 } ,
	{ 548, 3237, 0, 0 } ,
	{ 549, 3237, 0, 0 } ,
	{ 550, 3237, 0, 0 } ,
	{ 551, 3237, 0, 0 } ,
	{ 552, 3237, 0, 0 } ,
	{ 553, 3237, 0, 0 } ,
	{ 554, 3237, 0, 0 } ,
	{ 555, 3237, 0, 0 } ,
	{ 556, 3237, 0, 0 } ,
	{ 557, 3237, 0, 0 } ,
	{ 558, 3237, 0, 0 } ,
	{ 559, 3237, 0, 0 } ,
	{ 560, 3237, 0, 0 } ,
	{ 561, 3237, 0, 0 } ,
	{ 562, 3237, 0, 0 } ,
	{ 359, 3208, offsetof(InterpreterFactory_t1543, ___mapping_0), 0 } ,
	{ 364, 3058, offsetof(InterpreterFactory_t1543, ___pattern_1), 0 } ,
	{ 563, 2502, offsetof(InterpreterFactory_t1543, ___namesMapping_2), 0 } ,
	{ 350, 101, offsetof(InterpreterFactory_t1543, ___gap_3), 0 } ,
	{ 564, 514, offsetof(Link_t1544, ___base_addr_0) + sizeof(Object_t), 0 } ,
	{ 565, 514, offsetof(Link_t1544, ___offset_addr_1) + sizeof(Object_t), 0 } ,
	{ 566, 3247, offsetof(PatternLinkStack_t1545, ___link_1), 0 } ,
	{ 567, 3005, offsetof(PatternCompiler_t1547, ___pgm_0), 0 } ,
	{ 568, 3251, offsetof(LinkStack_t1546, ___stack_0), 0 } ,
	{ 405, 514, offsetof(Mark_t1548, ___Start_0) + sizeof(Object_t), 0 } ,
	{ 409, 514, offsetof(Mark_t1548, ___End_1) + sizeof(Object_t), 0 } ,
	{ 569, 514, offsetof(Mark_t1548, ___Previous_2) + sizeof(Object_t), 0 } ,
	{ 570, 1493, offsetof(IntStack_t1549, ___values_0) + sizeof(Object_t), 0 } ,
	{ 6, 101, offsetof(IntStack_t1549, ___count_1) + sizeof(Object_t), 0 } ,
	{ 571, 101, offsetof(RepeatContext_t1550, ___start_0), 0 } ,
	{ 572, 101, offsetof(RepeatContext_t1550, ___min_1), 0 } ,
	{ 573, 101, offsetof(RepeatContext_t1550, ___max_2), 0 } ,
	{ 574, 76, offsetof(RepeatContext_t1550, ___lazy_3), 0 } ,
	{ 575, 101, offsetof(RepeatContext_t1550, ___expr_pc_4), 0 } ,
	{ 418, 3255, offsetof(RepeatContext_t1550, ___previous_5), 0 } ,
	{ 6, 101, offsetof(RepeatContext_t1550, ___count_6), 0 } ,
	{ 45, 419, offsetof(Mode_t1551, ___value___1) + sizeof(Object_t), 0 } ,
	{ 576, 3257, 0, 0 } ,
	{ 577, 3257, 0, 0 } ,
	{ 578, 3257, 0, 0 } ,
	{ 579, 3058, offsetof(Interpreter_t1554, ___program_1), 0 } ,
	{ 580, 101, offsetof(Interpreter_t1554, ___program_start_2), 0 } ,
	{ 346, 75, offsetof(Interpreter_t1554, ___text_3), 0 } ,
	{ 581, 101, offsetof(Interpreter_t1554, ___text_end_4), 0 } ,
	{ 360, 101, offsetof(Interpreter_t1554, ___group_count_5), 0 } ,
	{ 582, 101, offsetof(Interpreter_t1554, ___match_min_6), 0 } ,
	{ 583, 3260, offsetof(Interpreter_t1554, ___qs_7), 0 } ,
	{ 584, 101, offsetof(Interpreter_t1554, ___scan_ptr_8), 0 } ,
	{ 585, 3255, offsetof(Interpreter_t1554, ___repeat_9), 0 } ,
	{ 586, 3255, offsetof(Interpreter_t1554, ___fast_10), 0 } ,
	{ 568, 3261, offsetof(Interpreter_t1554, ___stack_11), 0 } ,
	{ 587, 3255, offsetof(Interpreter_t1554, ___deep_12), 0 } ,
	{ 588, 3262, offsetof(Interpreter_t1554, ___marks_13), 0 } ,
	{ 589, 101, offsetof(Interpreter_t1554, ___mark_start_14), 0 } ,
	{ 590, 101, offsetof(Interpreter_t1554, ___mark_end_15), 0 } ,
	{ 354, 1493, offsetof(Interpreter_t1554, ___groups_16), 0 } ,
	{ 591, 514, offsetof(Interval_t1555, ___low_0) + sizeof(Object_t), 0 } ,
	{ 592, 514, offsetof(Interval_t1555, ___high_1) + sizeof(Object_t), 0 } ,
	{ 593, 167, offsetof(Interval_t1555, ___contiguous_2) + sizeof(Object_t), 0 } ,
	{ 3, 3265, offsetof(Enumerator_t1556, ___list_0), 0 } ,
	{ 594, 101, offsetof(Enumerator_t1556, ___ptr_1), 0 } ,
	{ 595, 3005, offsetof(IntervalCollection_t1558, ___intervals_0), 0 } ,
	{ 364, 75, offsetof(Parser_t1559, ___pattern_0), 0 } ,
	{ 594, 101, offsetof(Parser_t1559, ___ptr_1), 0 } ,
	{ 367, 3005, offsetof(Parser_t1559, ___caps_2), 0 } ,
	{ 596, 2988, offsetof(Parser_t1559, ___refs_3), 0 } ,
	{ 597, 101, offsetof(Parser_t1559, ___num_groups_4), 0 } ,
	{ 350, 101, offsetof(Parser_t1559, ___gap_5), 0 } ,
	{ 598, 75, offsetof(QuickSearch_t1552, ___str_0), 0 } ,
	{ 599, 101, offsetof(QuickSearch_t1552, ___len_1), 0 } ,
	{ 600, 76, offsetof(QuickSearch_t1552, ___ignore_2), 0 } ,
	{ 601, 76, offsetof(QuickSearch_t1552, ___reverse_3), 0 } ,
	{ 602, 1385, offsetof(QuickSearch_t1552, ___shift_4), 0 } ,
	{ 603, 2988, offsetof(QuickSearch_t1552, ___shiftExtended_5), 0 } ,
	{ 604, 3271, offsetof(QuickSearch_t1552_StaticFields, ___THRESHOLD_6), 0 } ,
	{ 351, 3197, offsetof(ReplacementEvaluator_t1560, ___regex_0), 0 } ,
	{ 605, 101, offsetof(ReplacementEvaluator_t1560, ___n_pieces_1), 0 } ,
	{ 606, 1493, offsetof(ReplacementEvaluator_t1560, ___pieces_2), 0 } ,
	{ 607, 75, offsetof(ReplacementEvaluator_t1560, ___replacement_3), 0 } ,
	{ 608, 3276, offsetof(CompositeExpression_t1563, ___expressions_0), 0 } ,
	{ 360, 101, offsetof(RegularExpression_t1565, ___group_count_1), 0 } ,
	{ 609, 101, offsetof(CapturingGroup_t1566, ___gid_1), 0 } ,
	{ 190, 75, offsetof(CapturingGroup_t1566, ___name_2), 0 } ,
	{ 610, 3282, offsetof(BalancingGroup_t1567, ___balance_3), 0 } ,
	{ 572, 101, offsetof(Repetition_t1569, ___min_1), 0 } ,
	{ 573, 101, offsetof(Repetition_t1569, ___max_2), 0 } ,
	{ 574, 76, offsetof(Repetition_t1569, ___lazy_3), 0 } ,
	{ 611, 3287, offsetof(CaptureAssertion_t1573, ___alternate_1), 0 } ,
	{ 612, 3282, offsetof(CaptureAssertion_t1573, ___group_2), 0 } ,
	{ 613, 3288, offsetof(CaptureAssertion_t1573, ___literal_3), 0 } ,
	{ 601, 76, offsetof(ExpressionAssertion_t1571, ___reverse_1), 0 } ,
	{ 614, 76, offsetof(ExpressionAssertion_t1571, ___negate_2), 0 } ,
	{ 598, 75, offsetof(Literal_t1572, ___str_0), 0 } ,
	{ 600, 76, offsetof(Literal_t1572, ___ignore_1), 0 } ,
	{ 615, 3293, offsetof(PositionAssertion_t1575, ___pos_0), 0 } ,
	{ 612, 3282, offsetof(Reference_t1576, ___group_0), 0 } ,
	{ 600, 76, offsetof(Reference_t1576, ___ignore_1), 0 } ,
	{ 613, 75, offsetof(BackslashNumber_t1577, ___literal_2), 0 } ,
	{ 616, 76, offsetof(BackslashNumber_t1577, ___ecma_3), 0 } ,
	{ 617, 3297, offsetof(CharacterClass_t1579_StaticFields, ___upper_case_characters_0), 0 } ,
	{ 614, 76, offsetof(CharacterClass_t1579, ___negate_1), 0 } ,
	{ 600, 76, offsetof(CharacterClass_t1579, ___ignore_2), 0 } ,
	{ 618, 3298, offsetof(CharacterClass_t1579, ___pos_cats_3), 0 } ,
	{ 619, 3298, offsetof(CharacterClass_t1579, ___neg_cats_4), 0 } ,
	{ 595, 3299, offsetof(CharacterClass_t1579, ___intervals_5), 0 } ,
	{ 620, 3301, offsetof(AnchorInfo_t1580, ___expr_0), 0 } ,
	{ 615, 3293, offsetof(AnchorInfo_t1580, ___pos_1), 0 } ,
	{ 621, 101, offsetof(AnchorInfo_t1580, ___offset_2), 0 } ,
	{ 598, 75, offsetof(AnchorInfo_t1580, ___str_3), 0 } ,
	{ 622, 101, offsetof(AnchorInfo_t1580, ___width_4), 0 } ,
	{ 600, 76, offsetof(AnchorInfo_t1580, ___ignore_5), 0 } ,
	{ 623, 1267, offsetof(UriScheme_t1584, ___scheme_0) + sizeof(Object_t), 0 } ,
	{ 624, 1267, offsetof(UriScheme_t1584, ___delimiter_1) + sizeof(Object_t), 0 } ,
	{ 625, 514, offsetof(UriScheme_t1584, ___defaultPort_2) + sizeof(Object_t), 0 } ,
	{ 626, 99, 0, 0 } ,
	{ 627, 76, offsetof(Uri_t1035, ___isUnixFilePath_1), 0 } ,
	{ 628, 75, offsetof(Uri_t1035, ___source_2), 0 } ,
	{ 623, 75, offsetof(Uri_t1035, ___scheme_3), 0 } ,
	{ 629, 75, offsetof(Uri_t1035, ___host_4), 0 } ,
	{ 630, 101, offsetof(Uri_t1035, ___port_5), 0 } ,
	{ 631, 75, offsetof(Uri_t1035, ___path_6), 0 } ,
	{ 632, 75, offsetof(Uri_t1035, ___query_7), 0 } ,
	{ 633, 75, offsetof(Uri_t1035, ___fragment_8), 0 } ,
	{ 634, 75, offsetof(Uri_t1035, ___userinfo_9), 0 } ,
	{ 635, 76, offsetof(Uri_t1035, ___isUnc_10), 0 } ,
	{ 636, 76, offsetof(Uri_t1035, ___isOpaquePart_11), 0 } ,
	{ 637, 76, offsetof(Uri_t1035, ___isAbsoluteUri_12), 0 } ,
	{ 638, 2502, offsetof(Uri_t1035, ___segments_13), 0 } ,
	{ 639, 76, offsetof(Uri_t1035, ___userEscaped_14), 0 } ,
	{ 640, 75, offsetof(Uri_t1035, ___cachedAbsoluteUri_15), 0 } ,
	{ 641, 75, offsetof(Uri_t1035, ___cachedToString_16), 0 } ,
	{ 642, 75, offsetof(Uri_t1035, ___cachedLocalPath_17), 0 } ,
	{ 643, 101, offsetof(Uri_t1035, ___cachedHashCode_18), 0 } ,
	{ 644, 3311, offsetof(Uri_t1035_StaticFields, ___hexUpperChars_19), 0 } ,
	{ 645, 3312, offsetof(Uri_t1035_StaticFields, ___SchemeDelimiter_20), 0 } ,
	{ 646, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeFile_21), 0 } ,
	{ 647, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeFtp_22), 0 } ,
	{ 648, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeGopher_23), 0 } ,
	{ 649, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeHttp_24), 0 } ,
	{ 650, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeHttps_25), 0 } ,
	{ 651, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeMailto_26), 0 } ,
	{ 652, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeNews_27), 0 } ,
	{ 653, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeNntp_28), 0 } ,
	{ 654, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeNetPipe_29), 0 } ,
	{ 655, 3312, offsetof(Uri_t1035_StaticFields, ___UriSchemeNetTcp_30), 0 } ,
	{ 656, 3313, offsetof(Uri_t1035_StaticFields, ___schemes_31), 0 } ,
	{ 657, 3314, offsetof(Uri_t1035, ___parser_32), 0 } ,
	{ 658, 2065, offsetof(Uri_t1035_StaticFields, ___U3CU3Ef__switchU24map12_33), 67 } ,
	{ 659, 2065, offsetof(Uri_t1035_StaticFields, ___U3CU3Ef__switchU24map13_34), 68 } ,
	{ 660, 2065, offsetof(Uri_t1035_StaticFields, ___U3CU3Ef__switchU24map14_35), 69 } ,
	{ 661, 2065, offsetof(Uri_t1035_StaticFields, ___U3CU3Ef__switchU24map15_36), 70 } ,
	{ 662, 2065, offsetof(Uri_t1035_StaticFields, ___U3CU3Ef__switchU24map16_37), 71 } ,
	{ 45, 419, offsetof(UriHostNameType_t1587, ___value___1) + sizeof(Object_t), 0 } ,
	{ 57, 3317, 0, 0 } ,
	{ 663, 3317, 0, 0 } ,
	{ 664, 3317, 0, 0 } ,
	{ 665, 3317, 0, 0 } ,
	{ 666, 3317, 0, 0 } ,
	{ 45, 419, offsetof(UriKind_t1588, ___value___1) + sizeof(Object_t), 0 } ,
	{ 667, 3319, 0, 0 } ,
	{ 668, 3319, 0, 0 } ,
	{ 669, 3319, 0, 0 } ,
	{ 670, 3322, offsetof(UriParser_t1582_StaticFields, ___lock_object_0), 0 } ,
	{ 671, 3323, offsetof(UriParser_t1582_StaticFields, ___table_1), 0 } ,
	{ 672, 1903, offsetof(UriParser_t1582, ___scheme_name_2), 0 } ,
	{ 673, 101, offsetof(UriParser_t1582, ___default_port_3), 0 } ,
	{ 674, 3324, offsetof(UriParser_t1582_StaticFields, ___uri_regex_4), 0 } ,
	{ 675, 3324, offsetof(UriParser_t1582_StaticFields, ___auth_regex_5), 0 } ,
	{ 45, 419, offsetof(UriPartial_t1589, ___value___1) + sizeof(Object_t), 0 } ,
	{ 676, 3326, 0, 0 } ,
	{ 677, 3326, 0, 0 } ,
	{ 678, 3326, 0, 0 } ,
	{ 679, 3326, 0, 0 } ,
	{ 680, 3335, offsetof(U3CPrivateImplementationDetailsU3E_t1594_StaticFields, ___U24U24fieldU2D2_0), 0 } ,
	{ 681, 3336, offsetof(U3CPrivateImplementationDetailsU3E_t1594_StaticFields, ___U24U24fieldU2D3_1), 0 } ,
	{ 682, 3336, offsetof(U3CPrivateImplementationDetailsU3E_t1594_StaticFields, ___U24U24fieldU2D4_2), 0 } ,
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
static const Il2CppFieldDefaultValue s_DefaultValues[372] = 
{
	{ 19, 72, 0 },
	{ 57, 72, 4 },
	{ 58, 72, 8 },
	{ 59, 72, 12 },
	{ 63, 72, 16 },
	{ 64, 72, 20 },
	{ 65, 72, 24 },
	{ 67, 72, 28 },
	{ 68, 72, 32 },
	{ 69, 72, 36 },
	{ 70, 72, 40 },
	{ 72, 72, 44 },
	{ 73, 72, 48 },
	{ 74, 72, 52 },
	{ 75, 72, 56 },
	{ 76, 72, 60 },
	{ 77, 72, 64 },
	{ 78, 72, 68 },
	{ 79, 72, 72 },
	{ 80, 72, 76 },
	{ 81, 72, 80 },
	{ 82, 72, 84 },
	{ 83, 72, 88 },
	{ 84, 72, 92 },
	{ 85, 72, 96 },
	{ 86, 72, 100 },
	{ 87, 72, 104 },
	{ 88, 72, 108 },
	{ 89, 72, 112 },
	{ 90, 72, 116 },
	{ 91, 72, 120 },
	{ 92, 72, 124 },
	{ 93, 72, 128 },
	{ 94, 72, 132 },
	{ 95, 72, 136 },
	{ 96, 72, 140 },
	{ 97, 72, 144 },
	{ 98, 72, 148 },
	{ 99, 72, 152 },
	{ 100, 72, 156 },
	{ 101, 72, 160 },
	{ 102, 72, 164 },
	{ 166, 72, 168 },
	{ 167, 72, 172 },
	{ 207, 72, 176 },
	{ 208, 72, 180 },
	{ 209, 72, 184 },
	{ 210, 72, 188 },
	{ 211, 72, 192 },
	{ 218, 72, 196 },
	{ 219, 72, 200 },
	{ 221, 72, 204 },
	{ 222, 72, 208 },
	{ 223, 72, 212 },
	{ 224, 72, 216 },
	{ 225, 72, 220 },
	{ 226, 72, 224 },
	{ 227, 72, 228 },
	{ 228, 72, 232 },
	{ 231, 72, 236 },
	{ 232, 72, 240 },
	{ 233, 72, 244 },
	{ 234, 72, 248 },
	{ 235, 72, 252 },
	{ 236, 72, 256 },
	{ 237, 72, 260 },
	{ 238, 72, 264 },
	{ 239, 72, 268 },
	{ 240, 72, 272 },
	{ 241, 2, 276 },
	{ 242, 2, 289 },
	{ 294, 72, 310 },
	{ 295, 72, 314 },
	{ 296, 72, 318 },
	{ 297, 72, 322 },
	{ 298, 72, 326 },
	{ 299, 72, 330 },
	{ 300, 72, 334 },
	{ 301, 72, 338 },
	{ 302, 72, 342 },
	{ 303, 72, 346 },
	{ 304, 72, 350 },
	{ 305, 72, 354 },
	{ 306, 72, 358 },
	{ 307, 72, 362 },
	{ 308, 72, 366 },
	{ 309, 72, 370 },
	{ 310, 72, 374 },
	{ 311, 72, 378 },
	{ 312, 72, 382 },
	{ 313, 72, 386 },
	{ 314, 72, 390 },
	{ 315, 72, 394 },
	{ 316, 72, 398 },
	{ 324, 72, 402 },
	{ 325, 72, 406 },
	{ 326, 72, 410 },
	{ 327, 72, 414 },
	{ 328, 72, 418 },
	{ 329, 72, 422 },
	{ 330, 72, 426 },
	{ 331, 72, 430 },
	{ 332, 72, 434 },
	{ 333, 72, 438 },
	{ 334, 72, 442 },
	{ 335, 72, 446 },
	{ 336, 72, 450 },
	{ 337, 72, 454 },
	{ 338, 72, 458 },
	{ 339, 2, 462 },
	{ 340, 2, 475 },
	{ 341, 72, 488 },
	{ 345, 72, 492 },
	{ 346, 72, 496 },
	{ 347, 72, 500 },
	{ 348, 72, 504 },
	{ 349, 72, 508 },
	{ 350, 72, 512 },
	{ 351, 72, 516 },
	{ 352, 72, 520 },
	{ 353, 72, 524 },
	{ 354, 72, 528 },
	{ 356, 72, 532 },
	{ 357, 72, 536 },
	{ 358, 72, 540 },
	{ 359, 72, 544 },
	{ 360, 72, 548 },
	{ 361, 72, 552 },
	{ 363, 72, 556 },
	{ 364, 72, 560 },
	{ 365, 72, 564 },
	{ 367, 72, 568 },
	{ 368, 72, 572 },
	{ 369, 72, 576 },
	{ 376, 2, 580 },
	{ 377, 2, 593 },
	{ 382, 72, 619 },
	{ 383, 72, 623 },
	{ 384, 72, 627 },
	{ 386, 72, 631 },
	{ 387, 72, 635 },
	{ 388, 72, 639 },
	{ 389, 72, 643 },
	{ 390, 72, 647 },
	{ 391, 72, 651 },
	{ 392, 72, 655 },
	{ 393, 72, 659 },
	{ 394, 72, 663 },
	{ 395, 72, 667 },
	{ 396, 72, 671 },
	{ 397, 72, 675 },
	{ 398, 72, 679 },
	{ 399, 72, 683 },
	{ 401, 72, 687 },
	{ 402, 72, 691 },
	{ 403, 72, 695 },
	{ 404, 72, 699 },
	{ 405, 72, 703 },
	{ 406, 72, 707 },
	{ 451, 72, 711 },
	{ 452, 72, 715 },
	{ 453, 72, 719 },
	{ 454, 72, 723 },
	{ 455, 72, 727 },
	{ 456, 72, 731 },
	{ 457, 72, 735 },
	{ 458, 72, 739 },
	{ 459, 72, 743 },
	{ 461, 1078, 747 },
	{ 462, 1078, 749 },
	{ 463, 1078, 751 },
	{ 464, 1078, 753 },
	{ 465, 1078, 755 },
	{ 466, 1078, 757 },
	{ 467, 1078, 759 },
	{ 468, 1078, 761 },
	{ 469, 1078, 763 },
	{ 470, 1078, 765 },
	{ 471, 1078, 767 },
	{ 472, 1078, 769 },
	{ 473, 1078, 771 },
	{ 474, 1078, 773 },
	{ 475, 1078, 775 },
	{ 476, 1078, 777 },
	{ 477, 1078, 779 },
	{ 478, 1078, 781 },
	{ 479, 1078, 783 },
	{ 480, 1078, 785 },
	{ 481, 1078, 787 },
	{ 482, 1078, 789 },
	{ 483, 1078, 791 },
	{ 484, 1078, 793 },
	{ 485, 1078, 795 },
	{ 487, 1078, 797 },
	{ 488, 1078, 799 },
	{ 489, 1078, 801 },
	{ 490, 1078, 803 },
	{ 491, 1078, 805 },
	{ 493, 1078, 807 },
	{ 494, 1078, 809 },
	{ 495, 1078, 811 },
	{ 496, 1078, 813 },
	{ 497, 1078, 815 },
	{ 498, 1078, 817 },
	{ 499, 1078, 819 },
	{ 500, 1078, 821 },
	{ 501, 1078, 823 },
	{ 502, 1078, 825 },
	{ 514, 1078, 827 },
	{ 515, 1078, 829 },
	{ 516, 1078, 831 },
	{ 517, 1078, 833 },
	{ 518, 1078, 835 },
	{ 519, 1078, 837 },
	{ 520, 1078, 839 },
	{ 521, 1078, 841 },
	{ 522, 1078, 843 },
	{ 523, 1078, 845 },
	{ 524, 1078, 847 },
	{ 525, 1078, 849 },
	{ 526, 1078, 851 },
	{ 527, 1078, 853 },
	{ 528, 1078, 855 },
	{ 529, 1078, 857 },
	{ 530, 1078, 859 },
	{ 531, 1078, 861 },
	{ 532, 1078, 863 },
	{ 533, 1078, 865 },
	{ 534, 1078, 867 },
	{ 535, 1078, 869 },
	{ 536, 1078, 871 },
	{ 537, 1078, 873 },
	{ 538, 1078, 875 },
	{ 539, 1078, 877 },
	{ 540, 1078, 879 },
	{ 541, 1078, 881 },
	{ 542, 1078, 883 },
	{ 543, 1078, 885 },
	{ 544, 1078, 887 },
	{ 545, 1078, 889 },
	{ 546, 1078, 891 },
	{ 547, 1078, 893 },
	{ 548, 1078, 895 },
	{ 549, 1078, 897 },
	{ 550, 1078, 899 },
	{ 551, 1078, 901 },
	{ 552, 1078, 903 },
	{ 553, 1078, 905 },
	{ 554, 1078, 907 },
	{ 555, 1078, 909 },
	{ 556, 1078, 911 },
	{ 557, 1078, 913 },
	{ 558, 1078, 915 },
	{ 559, 1078, 917 },
	{ 560, 1078, 919 },
	{ 561, 1078, 921 },
	{ 562, 1078, 923 },
	{ 563, 1078, 925 },
	{ 564, 1078, 927 },
	{ 565, 1078, 929 },
	{ 566, 1078, 931 },
	{ 567, 1078, 933 },
	{ 568, 1078, 935 },
	{ 569, 1078, 937 },
	{ 570, 1078, 939 },
	{ 571, 1078, 941 },
	{ 572, 1078, 943 },
	{ 573, 1078, 945 },
	{ 574, 1078, 947 },
	{ 575, 1078, 949 },
	{ 576, 1078, 951 },
	{ 577, 1078, 953 },
	{ 578, 1078, 955 },
	{ 579, 1078, 957 },
	{ 580, 1078, 959 },
	{ 581, 1078, 961 },
	{ 582, 1078, 963 },
	{ 583, 1078, 965 },
	{ 584, 1078, 967 },
	{ 585, 1078, 969 },
	{ 586, 1078, 971 },
	{ 587, 1078, 973 },
	{ 588, 1078, 975 },
	{ 589, 1078, 977 },
	{ 590, 1078, 979 },
	{ 591, 1078, 981 },
	{ 592, 1078, 983 },
	{ 593, 1078, 985 },
	{ 594, 1078, 987 },
	{ 595, 1078, 989 },
	{ 596, 1078, 991 },
	{ 597, 1078, 993 },
	{ 598, 1078, 995 },
	{ 599, 1078, 997 },
	{ 600, 1078, 999 },
	{ 601, 1078, 1001 },
	{ 602, 1078, 1003 },
	{ 603, 1078, 1005 },
	{ 604, 1078, 1007 },
	{ 605, 1078, 1009 },
	{ 606, 1078, 1011 },
	{ 607, 1078, 1013 },
	{ 608, 1078, 1015 },
	{ 609, 1078, 1017 },
	{ 610, 1078, 1019 },
	{ 611, 1078, 1021 },
	{ 612, 1078, 1023 },
	{ 613, 1078, 1025 },
	{ 614, 1078, 1027 },
	{ 615, 1078, 1029 },
	{ 616, 1078, 1031 },
	{ 617, 1078, 1033 },
	{ 618, 1078, 1035 },
	{ 619, 1078, 1037 },
	{ 620, 1078, 1039 },
	{ 621, 1078, 1041 },
	{ 622, 1078, 1043 },
	{ 623, 1078, 1045 },
	{ 624, 1078, 1047 },
	{ 625, 1078, 1049 },
	{ 626, 1078, 1051 },
	{ 627, 1078, 1053 },
	{ 628, 1078, 1055 },
	{ 629, 1078, 1057 },
	{ 630, 1078, 1059 },
	{ 631, 1078, 1061 },
	{ 632, 1078, 1063 },
	{ 633, 1078, 1065 },
	{ 634, 1078, 1067 },
	{ 635, 1078, 1069 },
	{ 636, 1078, 1071 },
	{ 637, 1078, 1073 },
	{ 638, 1078, 1075 },
	{ 639, 1078, 1077 },
	{ 640, 1078, 1079 },
	{ 641, 1078, 1081 },
	{ 642, 1078, 1083 },
	{ 643, 1078, 1085 },
	{ 644, 1078, 1087 },
	{ 645, 1078, 1089 },
	{ 646, 1078, 1091 },
	{ 647, 1078, 1093 },
	{ 648, 1078, 1095 },
	{ 649, 1078, 1097 },
	{ 650, 1078, 1099 },
	{ 651, 1078, 1101 },
	{ 652, 1078, 1103 },
	{ 653, 1078, 1105 },
	{ 654, 1078, 1107 },
	{ 655, 1078, 1109 },
	{ 656, 1078, 1111 },
	{ 657, 1078, 1113 },
	{ 658, 1078, 1115 },
	{ 681, 72, 1117 },
	{ 682, 72, 1121 },
	{ 683, 72, 1125 },
	{ 758, 72, 1129 },
	{ 797, 72, 1133 },
	{ 798, 72, 1137 },
	{ 799, 72, 1141 },
	{ 800, 72, 1145 },
	{ 801, 72, 1149 },
	{ 803, 72, 1153 },
	{ 804, 72, 1157 },
	{ 805, 72, 1161 },
	{ 813, 72, 1165 },
	{ 814, 72, 1169 },
	{ 815, 72, 1173 },
	{ 816, 72, 1177 },
	{ 817, 3331, 1181 },
	{ 818, 3333, 1309 },
	{ 819, 3333, 1321 },
};
static const uint8_t s_DefaultValueDataTable[1333] = 
{
	0x10,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x15,
	0x00,
	0x00,
	0x00,
	0x16,
	0x00,
	0x00,
	0x00,
	0x17,
	0x00,
	0x00,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x19,
	0x00,
	0x00,
	0x00,
	0x1A,
	0x00,
	0x00,
	0x00,
	0x1C,
	0x00,
	0x00,
	0x00,
	0x1D,
	0x00,
	0x00,
	0x00,
	0x30,
	0x00,
	0x00,
	0x00,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x39,
	0x11,
	0x00,
	0x00,
	0x00,
	0x42,
	0x61,
	0x73,
	0x69,
	0x63,
	0x20,
	0x43,
	0x6F,
	0x6E,
	0x73,
	0x74,
	0x72,
	0x61,
	0x69,
	0x6E,
	0x74,
	0x73,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x35,
	0x09,
	0x00,
	0x00,
	0x00,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x55,
	0x73,
	0x61,
	0x67,
	0x65,
	0xFF,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x34,
	0x16,
	0x00,
	0x00,
	0x00,
	0x53,
	0x75,
	0x62,
	0x6A,
	0x65,
	0x63,
	0x74,
	0x20,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x49,
	0x64,
	0x65,
	0x6E,
	0x74,
	0x69,
	0x66,
	0x69,
	0x65,
	0x72,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0xFF,
	0x0F,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x04,
	0x00,
	0x08,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x19,
	0x00,
	0x1A,
	0x00,
	0x1B,
	0x00,
	0x1C,
	0x00,
	0x1D,
	0x00,
	0x1E,
	0x00,
	0x1F,
	0x00,
	0x20,
	0x00,
	0x21,
	0x00,
	0x22,
	0x00,
	0x23,
	0x00,
	0x24,
	0x00,
	0x25,
	0x00,
	0x26,
	0x00,
	0x27,
	0x00,
	0x28,
	0x00,
	0x29,
	0x00,
	0x2A,
	0x00,
	0x2B,
	0x00,
	0x2C,
	0x00,
	0x2D,
	0x00,
	0x2E,
	0x00,
	0x2F,
	0x00,
	0x30,
	0x00,
	0x31,
	0x00,
	0x32,
	0x00,
	0x33,
	0x00,
	0x34,
	0x00,
	0x35,
	0x00,
	0x36,
	0x00,
	0x37,
	0x00,
	0x38,
	0x00,
	0x39,
	0x00,
	0x3A,
	0x00,
	0x3B,
	0x00,
	0x3C,
	0x00,
	0x3D,
	0x00,
	0x3E,
	0x00,
	0x3F,
	0x00,
	0x40,
	0x00,
	0x41,
	0x00,
	0x42,
	0x00,
	0x43,
	0x00,
	0x44,
	0x00,
	0x45,
	0x00,
	0x46,
	0x00,
	0x47,
	0x00,
	0x48,
	0x00,
	0x49,
	0x00,
	0x4A,
	0x00,
	0x4B,
	0x00,
	0x4C,
	0x00,
	0x4D,
	0x00,
	0x4E,
	0x00,
	0x4F,
	0x00,
	0x50,
	0x00,
	0x51,
	0x00,
	0x52,
	0x00,
	0x53,
	0x00,
	0x54,
	0x00,
	0x55,
	0x00,
	0x56,
	0x00,
	0x57,
	0x00,
	0x58,
	0x00,
	0x59,
	0x00,
	0x5A,
	0x00,
	0x5B,
	0x00,
	0x5C,
	0x00,
	0x5D,
	0x00,
	0x5E,
	0x00,
	0x5F,
	0x00,
	0x60,
	0x00,
	0x61,
	0x00,
	0x62,
	0x00,
	0x63,
	0x00,
	0x64,
	0x00,
	0x65,
	0x00,
	0x66,
	0x00,
	0x67,
	0x00,
	0x68,
	0x00,
	0x69,
	0x00,
	0x6A,
	0x00,
	0x6B,
	0x00,
	0x6C,
	0x00,
	0x6D,
	0x00,
	0x6E,
	0x00,
	0x6F,
	0x00,
	0x70,
	0x00,
	0x71,
	0x00,
	0x72,
	0x00,
	0x73,
	0x00,
	0x74,
	0x00,
	0x75,
	0x00,
	0x76,
	0x00,
	0x77,
	0x00,
	0x78,
	0x00,
	0x79,
	0x00,
	0x7A,
	0x00,
	0x7B,
	0x00,
	0x7C,
	0x00,
	0x7D,
	0x00,
	0x7E,
	0x00,
	0x7F,
	0x00,
	0x80,
	0x00,
	0x81,
	0x00,
	0x82,
	0x00,
	0x83,
	0x00,
	0x84,
	0x00,
	0x85,
	0x00,
	0x86,
	0x00,
	0x87,
	0x00,
	0x88,
	0x00,
	0x89,
	0x00,
	0x8A,
	0x00,
	0x8B,
	0x00,
	0x8C,
	0x00,
	0x8D,
	0x00,
	0x8E,
	0x00,
	0x8F,
	0x00,
	0x90,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0xFE,
	0x7F,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x09,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x07,
	0x02,
	0x00,
	0x00,
	0x00,
};
Il2CppImage g_System_dll_Image = 
{
	 "System.dll" ,
	&g_System_Assembly,
	g_System_Assembly_Types,
	161,
	NULL,
	s_StringTable,
	683,
	s_FieldTable,
	820,
	s_DefaultValues,
	372,
	s_DefaultValueDataTable,
	1333,
	77,
	NULL,
	g_System_Assembly_AttributeGenerators,
};
